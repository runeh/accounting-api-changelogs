{
  "definitions": {
    "AccountApi": {
      "properties": {
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "FiscalYearId": {
          "description": "Source: Get from /v2/fiscalyears. The Id of the Fiscal year that the account belongs to",
          "format": "uuid",
          "type": "string"
        },
        "IsActive": {
          "description": "Purpose: If the account is active or not",
          "type": "boolean"
        },
        "IsBlockedForManualBooking": {
          "description": "Purpose: If the account is blocked for manual bookkeeping. Automatic bookkeeping will always be available, no matter the setting on this property",
          "type": "boolean"
        },
        "IsCostCenterAllowed": {
          "description": "Purpose: If the account is allowed to have cost centers connected to it",
          "type": "boolean"
        },
        "IsProjectAllowed": {
          "description": "Purpose: If the account is allowed to have projects connected to it",
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 100 characters. The name of the account",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Number": {
          "description": "The account number",
          "type": "string"
        },
        "ReferenceCode": {
          "description": "Purpose: Returns the reference code on the account. This feature is for dutch companies only",
          "readOnly": true,
          "type": "string"
        },
        "Type": {
          "description": "Purpose: Returns account type number. This feature is for dutch companies only",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "TypeDescription": {
          "description": "Purpose: Returns account type descripion",
          "readOnly": true,
          "type": "string"
        },
        "VatCodeDescription": {
          "description": "Purpose: Describes what kind of VAT that is associated with the account",
          "readOnly": true,
          "type": "string"
        },
        "VatCodeId": {
          "description": "Source: Get from /v2/vatcodes. The Id of the VAT code that is associated with the account. Can be null if account does not have a vat code",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "Name",
        "Number",
        "FiscalYearId",
        "IsActive"
      ],
      "type": "object"
    },
    "AccountBalanceAPI": {
      "properties": {
        "AccountName": {
          "description": "Purpose: The account name",
          "readOnly": true,
          "type": "string"
        },
        "AccountNumber": {
          "description": "Purpose: The account number",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "AccountType": {
          "description": "Purpose: The account type number. For reports only",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "AccountTypeDescription": {
          "description": "Purpose: The Account Type Description. For reports only. Unfilterable property, filter on AccountType instead",
          "readOnly": true,
          "type": "string"
        },
        "Balance": {
          "description": "Purpose: The total account balance at the given date",
          "format": "double",
          "readOnly": true,
          "type": "number"
        }
      },
      "type": "object"
    },
    "AccountOpeningBalanceApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "Balance": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AccountTypesAPI": {
      "properties": {
        "Type": {
          "format": "int32",
          "type": "integer"
        },
        "TypeDescription": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountingLockDateApi": {
      "properties": {
        "Month": {
          "description": "Range: 1 - 12",
          "format": "int32",
          "maximum": 12,
          "minimum": 1,
          "type": "integer"
        },
        "Year": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AccountingLockSettingsApi": {
      "properties": {
        "AccountingLockInterval": {
          "description": "Range: 0 - 4. 0 = None, 1 = Month, 2 = Quarter, 3 = Year, 4 = TaxDeclaration",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "maximum": 4,
          "minimum": 0,
          "type": "integer"
        },
        "AccountingLockedAsOf": {
          "$ref": "#/definitions/AccountingLockDateApi",
          "description": "Default: No lock"
        },
        "TaxDeclarationDate": {
          "$ref": "#/definitions/TaxDeclarationDateApi",
          "description": "Only available for accounting lock interval as of tax declaration date"
        }
      },
      "type": "object"
    },
    "AllocationPeriodApi": {
      "properties": {
        "AllocationPeriodSourceType": {
          "description": "0 = SupplierInvoice, 1 = ManualVoucher",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "BookkeepingDate": {
          "format": "date-time",
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CreditAccountNumber": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "DebitAccountNumber": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ManualVoucherId": {
          "format": "uuid",
          "type": "string"
        },
        "ManualVoucherRow": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/AllocationPeriodRowApi"
          },
          "type": "array"
        },
        "Status": {
          "description": "0 = Pending, 1 = Revoked, 2 = Booked",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "SupplierInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRow": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Rows"
      ],
      "type": "object"
    },
    "AllocationPeriodRowApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "AllocationPeriodId": {
          "format": "uuid",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "DebitCredit": {
          "description": "1 = Debit, 2 = Credit",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "AccountNumber",
        "Amount",
        "DebitCredit"
      ],
      "type": "object"
    },
    "AllocationPlan": {
      "properties": {
        "AllocationAccountNumber": {
          "format": "int64",
          "maximum": 9999,
          "minimum": 0,
          "type": "integer"
        },
        "AmountToAllocate": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": 1,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "BookkeepingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "NumberOfAllocationPeriods": {
          "format": "int32",
          "maximum": 9999,
          "minimum": 1,
          "type": "integer"
        },
        "QuantityToAllocate": {
          "description": "Used for dutch companies that use agricultural settings",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "SupplierInvoiceId": {
          "description": "If assigned, SupplierInvoiceRow must be set",
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRow": {
          "description": "Required if SupplierInvoiceId is assigned",
          "format": "int32",
          "type": "integer"
        },
        "VoucherId": {
          "description": "If assigned, VoucherRow must be set",
          "format": "uuid",
          "type": "string"
        },
        "VoucherRow": {
          "description": "Required if VoucherId is assigned",
          "format": "int32",
          "type": "integer"
        },
        "WeightToAllocate": {
          "description": "Used for dutch companies that use agricultural settings",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "BookkeepingStartDate",
        "AmountToAllocate",
        "AllocationAccountNumber",
        "NumberOfAllocationPeriods"
      ],
      "type": "object"
    },
    "AppStoreActivationStatusApi": {
      "properties": {
        "ActivationStatus": {
          "description": "0 = Inactive, 1 = Active",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "ActivationStatus"
      ],
      "type": "object"
    },
    "ApplyClause": {
      "properties": {
        "Transformations": {
          "items": {
            "$ref": "#/definitions/TransformationNode"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ApplyQueryOption": {
      "properties": {
        "ApplyClause": {
          "$ref": "#/definitions/ApplyClause",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "ResultClrType": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApprovalApi": {
      "properties": {
        "DocumentApprovalStatus": {
          "description": "1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "RejectionMessage": {
          "description": "Max length: 200 characters. Purpose: The message sent to users when rejecting a document. Empty if DocumentApprovalStatus is not 2 = Rejected",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "RejectionMessageReceivers": {
          "description": "Purpose: The recipients of the rejection message. Empty if DocumentApprovalStatus is not 2 = Rejected. List of user ids. Use GET /v2/users",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "DocumentApprovalStatus"
      ],
      "type": "object"
    },
    "ApprovalSettingsApi": {
      "properties": {
        "UsesSupplierInvoiceApproval": {
          "description": "Shows if the company has supplier invoice approval activated. Used with: /v2/approval/supplierinvoice/{id}",
          "readOnly": true,
          "type": "boolean"
        },
        "UsesVatReportApproval": {
          "description": "Shows if the company has vat report approval activated. Used with: /v2/approval/vatreport/{id}",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ArticleAccountCodingAPI": {
      "properties": {
        "ChangedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "DomesticSalesSubjectToReversedConstructionVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesSubjectToVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesVatCodeExemptAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesVatExemptAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToMossAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToThirdPartySalesAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToVatWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptOutsideEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "VatRate": {
          "type": "string"
        },
        "VatRatePercent": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ArticleApi": {
      "properties": {
        "ArticleLabels": {
          "items": {
            "$ref": "#/definitions/ArticleLabelApi"
          },
          "type": "array"
        },
        "Barcodes": {
          "description": "Article barcode (currently only one BarcodeType=Default)",
          "items": {
            "$ref": "#/definitions/ArticleBarcodeApi"
          },
          "type": "array"
        },
        "ChangedUtc": {
          "description": "Purpose: Returns the last date and time from when a change was made on the article",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CodingId": {
          "description": "Source: Get from /v2/articleaccountcodings",
          "format": "uuid",
          "type": "string"
        },
        "CodingName": {
          "readOnly": true,
          "type": "string"
        },
        "CreatedUtc": {
          "description": "Purpose: Returns the date and time when the article was created",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "Discount from discount agreement",
          "format": "double",
          "type": "number"
        },
        "FreightCosts": {
          "description": "Freight costs per article unit",
          "format": "double",
          "type": "number"
        },
        "FreightCostsManuallyChangedUtc": {
          "description": "Purpose: Set when the freight costs is changed manually",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "GreenTechnologyType": {
          "description": "The type of green technology deduction that applies for this article.\r\n<list type=\"number\"><listheader><term>Value</term><description>Usage</description></listheader><item><term>0</term><description>This article doesn't benefit from deduction applicable to green technology</description></item><item><term>1</term><description>Installation of solar cells and panels </description></item><item><term>2</term><description>Installation of systems for storing privately produced electricity</description></item><item><term>3</term><description>Installation of charging points for electric vehicles</description></item></list>",
          "format": "int32",
          "type": "integer"
        },
        "GrossPrice": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "HouseWorkType": {
          "description": "0 = None, 1 = RotConstructionWork , 2 = RotElectricalWork , 3 = RotGlassSheetMetalWork , 4 = RotGroundWork , 5 = RotBrickWork , 6 = RotPaintDecorateWork , 7 = RotPlumbWork \r\n9 = RutCleanJobWork , 10 = RutCareClothTextile , 11 = RutCook , 12 = RutSnowRemove , 13 = RutGarden , 14 = RutBabySitt , 15 = RutOtherCare , 17 = RutHouseWorkHelp   \r\n18 = RutRemovalServices , 19 = RutITServices , 20 = RotHeatPump , 21 = RotHeatPump2 , 22 = RutHomeAppliances",
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsServiceArticle": {
          "description": "IsServiceArticle = FALSE if the sales category for the article is of the type Goods\r\nIsServiceArticle = TRUE if the sales category for the article is of the type Service.\r\nTo be able to filter Articles by AccountCodingType, use property called CodingType: 1 = Goods, 2 = Services.",
          "readOnly": true,
          "type": "boolean"
        },
        "IsStock": {
          "description": "Article can be stock article if stock module is activated and sales category for the article Goods type",
          "type": "boolean"
        },
        "MessageThreads": {
          "description": "Fetch messages via GET /v2/messagethreads/{messageThreadId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NameEnglish": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NetPrice": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "NetPriceWithDiscount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Notes": {
          "description": "Fetch notes via GET /v2/notes/{noteId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Number": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "PurchasePriceManuallyChangedUtc": {
          "description": "Purpose: Set when the purchase price is changed manually",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "SendToWebshop": {
          "description": "Purpose: If true, will send article to VismaWebShop (If company has the integration).\r\nDefault: True",
          "type": "boolean"
        },
        "ShowStockInformation": {
          "description": "ShowStockInformation = TRUE IF company has active stock module, article is stock article and article is not a service article\r\n                            OR company hasn't active stock module and article is not a service article.",
          "readOnly": true,
          "type": "boolean"
        },
        "StockBalance": {
          "description": "Default: 0. \r\nPurpose: Sets the stock balance for this article\r\nWhen stock module is active, this is read only",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "StockBalanceAvailable": {
          "description": "Purpose: Returns the available stock balance for this article",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "StockBalanceManuallyChangedUtc": {
          "description": "Purpose: Set when the stock balance is changed manually",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "StockBalanceReserved": {
          "description": "Purpose: Returns the reserved stock balance for this article",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "StockLocationReference": {
          "description": "Article stock location reference",
          "type": "string"
        },
        "StockValue": {
          "description": "Total value of articles currently in stock",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "UnitAbbreviation": {
          "description": "Purpose: Returns the unit abbreviation entered from UnitId",
          "readOnly": true,
          "type": "string"
        },
        "UnitId": {
          "description": "Source: Get from /v2/units",
          "format": "uuid",
          "type": "string"
        },
        "UnitName": {
          "description": "Purpose: Returns the unit name entered from UnitId",
          "readOnly": true,
          "type": "string"
        },
        "UpdateStockPrices": {
          "description": "Purpose: Update article purchase price and freight costs when creating manual stock adjustment",
          "type": "boolean"
        },
        "UsesMoss": {
          "description": "This property can be set to true if the OSS setting is checked in company settings",
          "type": "boolean"
        }
      },
      "required": [
        "IsActive",
        "Number",
        "Name",
        "CodingId",
        "UnitId"
      ],
      "type": "object"
    },
    "ArticleBarcodeApi": {
      "properties": {
        "Barcode": {
          "type": "string"
        },
        "BarcodeType": {
          "enum": [
            0
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ArticleLabelApi": {
      "properties": {
        "Description": {
          "description": "Max length: 400 characters",
          "maxLength": 400,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "AttachmentLinkApi": {
      "properties": {
        "AttachmentIds": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "DocumentId": {
          "description": "The id inside eAccounting of the corresponding linked document. Source: Get from endpoints corresponding to your document type",
          "format": "uuid",
          "type": "string"
        },
        "DocumentType": {
          "description": "0 = None, 1 = SupplierInvoice, 2 = Receipt, 3 = Voucher, 4 = SupplierInvoiceDraft, 5 = AllocationPeriod, 6 = Transfer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            8
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "DocumentType",
        "AttachmentIds"
      ],
      "type": "object"
    },
    "AttachmentResultApi": {
      "properties": {
        "AmountInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "AttachedDocumentType": {
          "description": "0 = None, 1 = SupplierInvoice, 2 = Receipt, 3 = Voucher, 4 = SupplierInvoiceDraft, 5 = AllocationPeriod, 6 = Transfer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            8
          ],
          "format": "int32",
          "type": "integer"
        },
        "AttachmentStatus": {
          "description": "0 = Matched, 1 = Unmatched",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ImageDate": {
          "description": "Date when source image was uploaded",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "TemporaryUrl": {
          "type": "string"
        },
        "TransactionDate": {
          "description": "The interpreted transaction date of the source image, eg invoicedate for a invoice, paymentdate for a reciept. \r\nCan be null if not interpreted.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Type": {
          "description": "0 = Invoice, 1 = Receipt, 2 = Document",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "UploadedBy": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentUploadApi": {
      "properties": {
        "ContentType": {
          "description": "= ['image/jpeg' or 'image/png' or 'image/tiff' or 'application/pdf']",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Data": {
          "description": "Format: Must be Base64 encoded byte array.",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Url": {
          "description": "Must be public URL",
          "type": "string"
        }
      },
      "required": [
        "ContentType",
        "FileName"
      ],
      "type": "object"
    },
    "AutoInvoiceAddressApi": {
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "type": "string"
        },
        "ElectronicAddress": {
          "type": "string"
        },
        "Gln": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "VatNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoInvoiceApi": {
      "properties": {
        "AutoInvoiceActivationStatus": {
          "description": "0 = Unregistered, 1 = Registered, 2 = Activated",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "AutoInvoiceB2CStatus": {
          "description": "Only for Norway and Finland. 0 = NotActivated, 1 = Pending, 2 = Activated",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "AutoInvoiceInboundStatus": {
          "description": "0 = Deactivated, 1 = Activated",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BalanceAndDateApi": {
      "properties": {
        "Balance": {
          "format": "double",
          "type": "number"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccountApi": {
      "properties": {
        "Balance": {
          "$ref": "#/definitions/BalanceAndDateApi",
          "description": "Purpose: The latest avaiable balance for the bank account, with the date of the balance.",
          "readOnly": true
        },
        "Bank": {
          "description": "Not required for dutch companies and bank accounts of cash or tax account type. Source: Get from /v2/banks",
          "format": "uuid",
          "type": "string"
        },
        "BankAccountHolderName": {
          "description": "Used for dutch companies",
          "type": "string"
        },
        "BankAccountType": {
          "description": "1 = ChequeAccount, 2 = CashAccount, 3 = SavingsAccount, 4 = CurrencyAccount, 5 = DigitalWalletAccount, 6 = CashCreditAccount, 7 = TaxAccount",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "format": "int32",
          "type": "integer"
        },
        "BankAccountTypeDescription": {
          "description": "Purpose: Description of Bank Account type",
          "readOnly": true,
          "type": "string"
        },
        "Bban": {
          "description": "Max length: 35 characters. Also known as Bank Account number. Not required for bank accounts of cash or tax account type",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Purpose: Default value: Base currency of the company",
          "readOnly": true,
          "type": "string"
        },
        "HasActiveBankAgreement": {
          "type": "boolean"
        },
        "Iban": {
          "description": "Max length: 35 characters",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsDefaultChequeAccount": {
          "description": "Purpose: Only used when having several cheque accounts",
          "type": "boolean"
        },
        "LedgerAccountNumber": {
          "description": "The general ledger account number",
          "format": "int64",
          "type": "integer"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 200 characters",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "BankAccountType",
        "Name",
        "LedgerAccountNumber"
      ],
      "type": "object"
    },
    "BankApi": {
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankTransactionApi": {
      "properties": {
        "ChargeAmount": {
          "description": "The amount which represents bank charges",
          "format": "double",
          "type": "number"
        },
        "ChargeCurrency": {
          "description": "The currency of the bank charges amount",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "IsReconciled": {
          "description": "True if the transaction has been matched",
          "type": "boolean"
        },
        "OriginalAmount": {
          "description": "The amount which represents the original amount of the bank transaction",
          "format": "double",
          "type": "number"
        },
        "OriginalCurrency": {
          "description": "The currency corresponding to the original amount",
          "type": "string"
        },
        "Reference": {
          "description": "Represents the invoice reference of the bank transaction",
          "type": "string"
        },
        "Rows": {
          "description": "Represents the accounting transactions related to the bank transaction",
          "items": {
            "$ref": "#/definitions/BankTransactionRowApi"
          },
          "type": "array"
        },
        "TransactionAmount": {
          "description": "The total amount of the bank transaction, including bank charges",
          "format": "double",
          "type": "number"
        },
        "TransactionAmountCurrency": {
          "description": "The currency corresponding to the transaction amount",
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankTransactionRowApi": {
      "properties": {
        "AmountTransactionCurrency": {
          "format": "double",
          "type": "number"
        },
        "Name": {
          "description": "Depending on the Source property, displays information like invoice customer or supplier name, or document description",
          "type": "string"
        },
        "Number": {
          "description": "Depending on the Source property, it displays the number of the document associated to it",
          "type": "string"
        },
        "PaymentVoucherId": {
          "description": "Source: Get from /v2/vouchers",
          "format": "uuid",
          "type": "string"
        },
        "PaymentVoucherNumber": {
          "type": "string"
        },
        "Reference": {
          "description": "If the source is a customer or supplier invoice, it represents the OCR number of the specific invoice",
          "type": "string"
        },
        "Source": {
          "description": "The origin of the bank transaction",
          "type": "string"
        },
        "SourceId": {
          "description": "Represents the unique identifier of the Source property",
          "format": "uuid",
          "type": "string"
        },
        "VoucherId": {
          "description": "Source: Get from /v2/vouchers",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyRotRutSettingsApi": {
      "properties": {
        "RotReducedInvoicingMaxAmount": {
          "format": "double",
          "maximum": 999999,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPercent": {
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RutMaxAmountForPersBelow65Year": {
          "format": "double",
          "maximum": 999999,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RutMaxAmountForPersOver65Year": {
          "format": "double",
          "maximum": 999999,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RutReducedInvoicingPercent": {
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CompanySettingsApi": {
      "properties": {
        "AccountNumberDigits": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "AccountingLockInterval": {
          "description": "0 = None, 1 = Month, 2 = Quarter, 3 = Year, 4 = TaxDeclaration",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "AccountingLockedTo": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "ActivatedModules": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Address1": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Address2": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ApprovalSettings": {
          "$ref": "#/definitions/ApprovalSettingsApi",
          "description": "Approval company settings"
        },
        "AutoInvoice": {
          "$ref": "#/definitions/AutoInvoiceApi",
          "description": "Auto invoice company settings"
        },
        "BankAccount": {
          "readOnly": true,
          "type": "string"
        },
        "BankGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "BankgiroNumberPrint": {
          "description": "Alternative bank giro number on sales invoice printouts",
          "type": "string"
        },
        "City": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "CompanyIdentifier": {
          "description": "Company Identifier. Unique identifier for the company",
          "readOnly": true,
          "type": "string"
        },
        "CompanyRotRutSettings": {
          "$ref": "#/definitions/CompanyRotRutSettingsApi",
          "description": "Only for swedish companies and values are recommended by the tax authority. Use PUT v2/companysettings/rotrutsettings in combination with UsesRotReducedInvoicing set to true.",
          "readOnly": true
        },
        "CompanyStatus": {
          "description": "0 = Inactive, Active = 1, ReadOnly = 2",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "CompanyText": {
          "$ref": "#/definitions/CompanyTextsApi",
          "description": "Company settings - Other information"
        },
        "CorporateIdentityNumber": {
          "readOnly": true,
          "type": "string"
        },
        "CountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "readOnly": true,
          "type": "string"
        },
        "DomesticCurrencyRounding": {
          "description": "0 = None, HalfAwayFromZero = 1",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Email": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Gln": {
          "description": "Global Location Number",
          "readOnly": true,
          "type": "string"
        },
        "HasProportionalVatEnabled": {
          "readOnly": true,
          "type": "boolean"
        },
        "Iban": {
          "readOnly": true,
          "type": "string"
        },
        "IsPayslipActivated": {
          "readOnly": true,
          "type": "boolean"
        },
        "KeepOriginalDraftDate": {
          "description": "When set to true, keep the original sales invoice draft date as invoice date",
          "type": "boolean"
        },
        "MobilePhone": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "NextArticleNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "NextCustomerInvoiceNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "NextCustomerNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "NextOrderNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "NextQuoteNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "NextSupplierNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "OurReference": {
          "description": "Default company reference.\r\nMax length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "PlusGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "PostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "ProductVariant": {
          "description": "Variant of eAccouting. 1 = Standard/Smart, 2 = Invoicing, 3 = Bookkeeping, 4 = Start/Solo, 5 = Pro, 6 = InvoicingCollaboration",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "ProportionalVatValue": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "ShowContributionMargin": {
          "readOnly": true,
          "type": "boolean"
        },
        "ShowCostCenterReminder": {
          "description": "Customer has opted to get reminded about adding a cost center when creating invoices.",
          "readOnly": true,
          "type": "boolean"
        },
        "ShowPricesExclVatPC": {
          "description": "Show prices excluding VAT for private individuals",
          "readOnly": true,
          "type": "boolean"
        },
        "ShowProjectReminder": {
          "description": "Customer has opted to get reminded about adding a project when creating invoices.",
          "readOnly": true,
          "type": "boolean"
        },
        "TaxDeclarationDate": {
          "$ref": "#/definitions/TaxDeclarationDateApi",
          "description": "Purpose: Only for Sweden and Finland",
          "readOnly": true
        },
        "TermsOfPaymentId": {
          "description": "Source: Get from /v2/termsofpayments",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "TypeOfBusiness": {
          "description": "1 = Corporation, 2 = SoleProprietorship, 3 = EconomicAssociation, 4 = NonProfitOrganization, 5 = GeneralPartnership, 6 = LimitedPartnership, 7 = Cooperatives, 9 = PublicLimited",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            9
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "UseAutomaticVatCalculation": {
          "description": "When set to true, vat rows are added (when creating a voucher for example), if the account used relates to.\r\nUsed for SE, NO, FI",
          "type": "boolean"
        },
        "UsePaymentFilesForOutgoingPayments": {
          "description": "When set to true, supplier invoices can be exported as paymentfile and manually sent to bank",
          "type": "boolean"
        },
        "UsesMoss": {
          "type": "boolean"
        },
        "UsesPaymentReferenceNumber": {
          "description": "Show OCR/KID reference no. on invoice",
          "type": "boolean"
        },
        "UsesReverseConstructionVat": {
          "description": "Construction sector, VAT reverse charge rules apply",
          "type": "boolean"
        },
        "UsesRotReducedInvoicing": {
          "description": "Only for swedish companies. Domestic services to private individuals, ROT/RUT rules apply",
          "type": "boolean"
        },
        "VatCode": {
          "description": "VAT identification number",
          "readOnly": true,
          "type": "string"
        },
        "VatPeriod": {
          "description": "Period when VAT report should be sent. 1 = OnceAMonth12th, 2 = OnceAMonth26th, 3 = OnceAQuarter, 4 = OnceAYear, 5 = Never, 6 = Bimonthly, 7 = OnceAMonth, 8 = TwiceAYear, 9 = OnceAQuarterFloating",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Website": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name",
        "Phone",
        "Address1",
        "CountryCode",
        "PostalCode",
        "City"
      ],
      "type": "object"
    },
    "CompanyTextsApi": {
      "properties": {
        "CustomerInvoiceTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "CustomerInvoiceTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OrderTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OrderTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OverDueTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OverDueTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContributionMarginApi": {
      "properties": {
        "Amount": {
          "description": "Amount of contribution margin",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Percentage of contribution margin",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CostCenterApi": {
      "properties": {
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Items": {
          "description": "The cost center items associated to this cost center",
          "items": {
            "$ref": "#/definitions/CostCenterItemApi"
          },
          "type": "array"
        },
        "Name": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Number": {
          "description": "Purpose: The number of the cost center generated by eAccounting",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CostCenterItemApi": {
      "properties": {
        "CostCenterId": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ShortName": {
          "description": "Max length: 9 characters",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "CostCenterId",
        "Name",
        "ShortName",
        "IsActive"
      ],
      "type": "object"
    },
    "CountQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "Validator": {
          "$ref": "#/definitions/CountQueryValidator"
        },
        "Value": {
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CountQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "CountryApi": {
      "properties": {
        "Code": {
          "type": "string"
        },
        "IsEuMember": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditedByApi": {
      "properties": {
        "CreditInvoiceId": {
          "description": "The Id of the customer invoice",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CurrencyApi": {
      "properties": {
        "Code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerApi": {
      "properties": {
        "AutoInvoiceActivationEmailSentDate": {
          "format": "date-time",
          "type": "string"
        },
        "AutoInvoiceRegistrationRequestSentDate": {
          "format": "date-time",
          "type": "string"
        },
        "ChangedUtc": {
          "description": "Purpose: Returns the last date and time from when a change was made on the customer",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CustomerLabels": {
          "items": {
            "$ref": "#/definitions/CustomerLabelApi"
          },
          "type": "array"
        },
        "CustomerNumber": {
          "description": "Max length: 16 characters. Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryBasedVat": {
          "description": "Purpose: Option to set the delivery address as the base for vat and oss calculations. Delivery city, country code and postal code must be set aswell",
          "type": "boolean"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice city differs from delivery city",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters. Purpose: Only used if invoice country code differs from delivery country code",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodId": {
          "description": "Source: Get from /v2/deliverymethods",
          "format": "uuid",
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters. Purpose: Only used if invoice postal code differs from delivery postal code",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermId": {
          "description": "Source: Get from /v2/deliveryterms",
          "format": "uuid",
          "type": "string"
        },
        "DirectDebitCustomerSettings": {
          "$ref": "#/definitions/DirectDebitCustomerSettingsApi",
          "description": "Purpose: Direct Debit module (for the Netherlands) settings"
        },
        "DiscountAgreementId": {
          "description": "Returns the discount agreement id that is connected to the customer. It will be used only for Pro variant companies",
          "format": "uuid",
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "Format: 4 decimals",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "EdiGlnNumber": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicAddress": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicReference": {
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ForceBookkeepVat": {
          "type": "boolean"
        },
        "GLN": {
          "description": "NOTE: Obsolete. Please use EdiGlnNumber instead",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Iban": {
          "description": "Purpose: Customer's bank account IBAN (manual entry)",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsFutureInvoiceDateAllowed": {
          "description": "Purpose: Future dates on invoices are allowed based on terms of payments and invoice currency code settings",
          "readOnly": true,
          "type": "boolean"
        },
        "IsNorthernIreland": {
          "type": "boolean"
        },
        "IsPrivatePerson": {
          "type": "boolean"
        },
        "LastInvoiceDate": {
          "description": "Purpose: Returns the last invoice date",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "MessageThreads": {
          "description": "Fetch messages via GET /v2/messagethreads/{messageThreadId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 4000 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Fetch notes via GET /v2/notes/{noteId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "PayToAccountId": {
          "description": "Purpose: The account Id on which payments are registered",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ReverseChargeOnConstructionServices": {
          "description": "Default: false. Purpose: If true, VatNumber must be set aswell",
          "type": "boolean"
        },
        "SalesDocumentLanguage": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "SalesPriceListId": {
          "description": "Returns the sales price list id that is connected to the customer. It will be used only for Pro variant companies",
          "format": "uuid",
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPayment": {
          "$ref": "#/definitions/TermsOfPaymentApi",
          "description": "Purpose. Purpose: Returns the terms of payment model entered from TermsOfPaymentId",
          "readOnly": true
        },
        "TermsOfPaymentId": {
          "description": "Source: Get from /v2/termsofpayment",
          "format": "uuid",
          "type": "string"
        },
        "UnpaidInvoicesAmount": {
          "description": "The total amount of unpaid invoices for the customer.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "VatNumber": {
          "description": "Max length: 20 characters. Format: 2 character country code followed by 8-12 numbers.",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "WebshopCustomerNumber": {
          "format": "int32",
          "type": "integer"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "InvoiceCity",
        "InvoicePostalCode",
        "Name",
        "TermsOfPaymentId",
        "IsPrivatePerson",
        "IsActive"
      ],
      "type": "object"
    },
    "CustomerInvoiceApi": {
      "properties": {
        "BuyersOrderReference": {
          "description": "Purpose: Used when sending electronic invoices. Max length: 35 characters. Can be null or empty",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "CreatedFromDraftId": {
          "description": "If a valid customer invoice draft Id is provided, it will be bookkeeped using the option entered in the SentType property",
          "format": "uuid",
          "type": "string"
        },
        "CreatedFromOrderId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CreditedBy": {
          "description": "Credit customer invoices created based on the customer invoice\r\nOnly applicable when IsCreditInvoice is false",
          "items": {
            "$ref": "#/definitions/CreditedByApi"
          },
          "readOnly": true,
          "type": "array"
        },
        "CurrencyCode": {
          "readOnly": true,
          "type": "string"
        },
        "CurrencyRate": {
          "description": "Default: Automatic calculation of the currency rate. Enter this value to provide a custom rate",
          "format": "double",
          "type": "number"
        },
        "CustomerEmail": {
          "readOnly": true,
          "type": "string"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "readOnly": true,
          "type": "boolean"
        },
        "CustomerNumber": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryMethodCode": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryMethodName": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryTermName": {
          "readOnly": true,
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicAddress": {
          "readOnly": true,
          "type": "string"
        },
        "ElectronicReference": {
          "type": "string"
        },
        "EuThirdParty": {
          "description": "Default: false. True only if EU intermediary, VAT triangulation rules apply.\r\nOnly if EU company is invoicing to a company from a different EU country, may set to True if desired.",
          "type": "boolean"
        },
        "FactoringInvoiceStatus": {
          "description": "Describes the sold invoice status in factoring partner system.\r\n0 - Unknown\r\n1 - Applied(applies for soft offers)\r\n2 - Withdrawn(applies for soft offers)\r\n3 - Rejected(applies for soft offers)\r\n4 - Sold\r\n5 - Approved(applies for soft offers)\r\n6 - FirstReminderSent\r\n7 - DebtCollection\r\n8 - Reclaimed\r\n9 - FullyPaid\r\n10 - Closed\r\n11 - SecondReminderSent",
          "enum": [
            0,
            3,
            4,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "HasAutoInvoiceError": {
          "readOnly": true,
          "type": "boolean"
        },
        "Id": {
          "description": "Purpose: This is automatically generated by eAccounting upon creation",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IncludesVat": {
          "description": "Purpose: If true the unit prices on rows include VAT. The value is set upon creation depending whether \"Show prices excl. VAT for private individuals\" in company settings is marked or not",
          "readOnly": true,
          "type": "boolean"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "InvoicePostalCode": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "IsNotDelivered": {
          "description": "Purpose: True if sending by email has failed",
          "readOnly": true,
          "type": "boolean"
        },
        "IsSold": {
          "description": "Defines whether customer invoice was sold using an integration with factoring partner",
          "readOnly": true,
          "type": "boolean"
        },
        "MessageThreads": {
          "description": "Fetch messages via GET /v2/messagethreads/{messageThreadId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Notes": {
          "description": "Fetch notes via GET /v2/notes/{noteId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "OurReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "description": "Purpose: Empty if UsesPaymentReferenceNumber not activated on the company. Use /v2/companysettings.",
          "readOnly": true,
          "type": "string"
        },
        "PaymentReminderIssued": {
          "description": "Purpose: If true a payment reminder has been sent for the overdue invoice, otherwise it will be set as false. To send a payment reminder please use the v2/customerinvoices/{invoiceId}/paymentreminders endpoint",
          "readOnly": true,
          "type": "boolean"
        },
        "PaymentStatus": {
          "description": "0 = Paid, 1 = Unpaid, 2 = Overdue",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Persons": {
          "description": "Purpose: Required for ROT/RUT invoices only",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPersonApi"
          },
          "type": "array"
        },
        "ReferringInvoiceId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "RemainingAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "ReverseChargeOnConstructionServices": {
          "readOnly": true,
          "type": "boolean"
        },
        "ReversedConstructionVatInvoicing": {
          "readOnly": true,
          "type": "boolean"
        },
        "RotPropertyType": {
          "description": "1 = Apartment, 2 = Property\r\nLeave blank or set to null if you do not intend to use ROT or Green Technology functionality",
          "format": "int32",
          "maximum": 2,
          "minimum": 1,
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "description": "Default: Automatic tax reduction calculation. Used for the manual input of the deducted tax reduction",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "readOnly": true,
          "type": "boolean"
        },
        "RotReducedInvoicingOrgNumber": {
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingPercent": {
          "description": "Format: 4 decimals",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Used for providing a custom name. Is required when RotPropertyType or UsesGreenTechnology is set.",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "description": "0 = Normal, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "maximum": 2,
          "minimum": 0,
          "type": "integer"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceRowApi"
          },
          "type": "array"
        },
        "SalesDocumentAttachments": {
          "description": "Upload attachments via POST /v2/salesdocumentattachments/customerinvoice",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "SendType": {
          "description": "Used for sending the invoice via Autoinvoice\r\nDefault:None\r\n0 = None, 1 = AutoInvoiceElectronic, 2 = AutoInvoicePrint, 3 = AutoInvoiceB2C",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "SetOffAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TermsOfPaymentId": {
          "description": "Specify a different terms of payment for the invoice. If not filled customer's terms of payment will be used",
          "format": "uuid",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalVatAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "UsesGreenTechnology": {
          "description": "Set to true if this customer invoice benefits from deduction on Green Technology.\r\nIf set to true the customer invoice must have RotReducedInvoicingType set to normal and contain at least one row with applicable deduction.",
          "type": "boolean"
        },
        "VatSpecification": {
          "description": "Purpose: A summary of amounts for each VAT rate",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceVatApi"
          },
          "readOnly": true,
          "type": "array"
        },
        "VoucherId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "VoucherNumber": {
          "readOnly": true,
          "type": "string"
        },
        "WorkHouseOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "YourReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "EuThirdParty",
        "CustomerId",
        "Rows",
        "RotReducedInvoicingType"
      ],
      "type": "object"
    },
    "CustomerInvoiceDraftApi": {
      "properties": {
        "BuyersOrderReference": {
          "description": "Purpose: Used when sending electronic invoices. Max length: 35 characters. Can be null or empty",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CreatedUtc": {
          "description": "Purpose: Is automatically set",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CustomerId": {
          "description": "Source: Get from /v2/customers",
          "format": "uuid",
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "description": "Purpose: Value is automatically set up depending on the selected customer's properties",
          "readOnly": true,
          "type": "boolean"
        },
        "CustomerNumber": {
          "description": "Max length: 16 characters",
          "maxLength": 16,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicReference": {
          "description": "Set this if you later intend to send the invoice electronically. Can only be set for non-private individuals",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "HouseWorkOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IncludesVat": {
          "description": "Purpose: If true the unit prices on rows include VAT. The value is set upon creation depending whether \"Show prices excl. VAT for private individuals\" in company settings is marked or not",
          "readOnly": true,
          "type": "boolean"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters\r\nSet a value if you want to override the existing property value taken from the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Purpose: Value is automatically set up depending on the selected customer's properties",
          "maxLength": 50,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Purpose: Value is automatically set up depending on the selected customer's properties",
          "maxLength": 2,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCurrencyCode": {
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Purpose: Value is automatically set up depending on the selected customer's properties",
          "maxLength": 50,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "description": "Optional invoice date.",
          "format": "date-time",
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Purpose: Value is automatically set up depending on the selected customer's properties",
          "maxLength": 10,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "OurReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Persons": {
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPersonApi"
          },
          "type": "array"
        },
        "ReplaceUnitPriceWhenZero": {
          "description": "When set to true an unit price of zero will be replaced with the unit price on the article register. When set to false it allows creation of drafts with unit price 0 on one or more rows.\r\nRows with an unit price other than 0 are not affected by this setting. The default value is false.",
          "type": "boolean"
        },
        "ReverseChargeOnConstructionServices": {
          "readOnly": true,
          "type": "boolean"
        },
        "RotPropertyType": {
          "description": "1 - Apartment\r\n2 - Property\r\nLeave blank or set to null if you do not intend to use ROT or Green Technology functionality",
          "format": "int32",
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "description": "Default: False",
          "type": "boolean"
        },
        "RotReducedInvoicingOrgNumber": {
          "description": "Max length: 11 characters",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "description": "0 = Normal, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceDraftRowApi"
          },
          "type": "array"
        },
        "SalesDocumentAttachments": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "TotalAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalAmountBaseCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "TotalVatAmountBaseCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "UsesGreenTechnology": {
          "description": "Set to true if this customer invoice draft benefits from deduction on Green Technology.\r\nIf set to true the customer invoice draft must have RotReducedInvoicingType set to normal and contain at least one row with applicable deduction.",
          "type": "boolean"
        },
        "YourReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "CustomerId",
        "RotReducedInvoicingType",
        "EuThirdParty"
      ],
      "type": "object"
    },
    "CustomerInvoiceDraftRowApi": {
      "properties": {
        "ArticleId": {
          "description": "Source: Get from /v2/articles. Required if IsTextRow is false",
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Purpose: Returns the article number from the entered ArticleId",
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenteritems",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenteritems",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenteritems",
          "format": "uuid",
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "Format: 4 decimals allowed",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "GreenTechnologyType": {
          "description": "Type of green technology on the quote row, can be : \r\nNone = 0,\r\nSolarCellInstallation = 1,\r\nElectricEnergyStorageInstallation = 2,\r\nElectricVehicleChargingPointInstallation = 3,\r\nDefault value is 0.",
          "format": "int32",
          "maximum": 3,
          "minimum": 0,
          "type": "integer"
        },
        "Id": {
          "description": "Purpose: This property will be updated on every change on the customer invoice draft",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsServiceArticle": {
          "description": "IsServiceArticle = FALSE if the sales category for the article is of the type Goods\r\nIsServiceArticle = TRUE if the sales category for the article is of the type Service.",
          "readOnly": true,
          "type": "boolean"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "LineNumber": {
          "description": "Default: Automatic calculation based on the order of the row in the JSON.",
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "MaterialCosts": {
          "format": "double",
          "type": "number"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "ReversedConstructionServicesVatFree": {
          "type": "boolean"
        },
        "Text": {
          "description": "Max length: 2000. Sets the article name",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitAbbreviation": {
          "type": "string"
        },
        "UnitAbbreviationEnglish": {
          "description": "Unit Abbrevation in English",
          "type": "string"
        },
        "UnitId": {
          "description": "Source: Get from /v2/units/{id}",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "UnitName": {
          "type": "string"
        },
        "UnitPrice": {
          "description": "Format: 2 decimals allowed if the customer is domestic or 4 decimals if foreign.\r\nThe default behavior when unit price is zero is specified by setting ReplaceUnitPriceWhenZero on the customer invoice draft.",
          "format": "double",
          "type": "number"
        },
        "VatRateId": {
          "description": "Source: Get from /v2/articleaccountcodings",
          "readOnly": true,
          "type": "string"
        },
        "WorkCostType": {
          "format": "int32",
          "type": "integer"
        },
        "WorkHours": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "IsTextRow",
        "ReversedConstructionServicesVatFree"
      ],
      "type": "object"
    },
    "CustomerInvoiceDraftValidationApi": {
      "properties": {
        "Rows": {
          "description": "A set of invoice rows to validate. We match upon the line number.",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceDraftValidationRowApi"
          },
          "type": "array"
        },
        "TotalAmountInvoiceCurrency": {
          "description": "Invoice total amount. Should be negative when credit invoice",
          "format": "double",
          "type": "number"
        },
        "TotalRoundingsInvoiceCurrency": {
          "description": "Invoice Roundings amount. Can be both positive and negative depending on the rounding.",
          "format": "double",
          "type": "number"
        },
        "TotalVatAmountInvoiceCurrency": {
          "description": "Invoice VAT amount. Should be negative when credit invoice",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceDraftValidationRowApi": {
      "properties": {
        "LineNumber": {
          "description": "Line number from the customer invoice draft",
          "format": "int32",
          "type": "integer"
        },
        "TotalAmountIncVatInvoiceCurrency": {
          "description": "Total amount with VAT ((Quantity * Unit price) - Discount)",
          "format": "double",
          "type": "number"
        },
        "TotalAmountNoVatInvoiceCurrency": {
          "description": "Total amount without VAT ((Quantity * Unit price) - Discount)",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceRowApi": {
      "properties": {
        "AmountNoVat": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "ArticleId": {
          "description": "Purpose: Null if text row",
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "readOnly": true,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "Format: 4 decimals",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "GreenTechnologyType": {
          "description": "Type of green technology on the quote row, can be : \r\nNone = 0,\r\nSolarCellInstallation = 1,\r\nElectricEnergyStorageInstallation = 2,\r\nElectricVehicleChargingPointInstallation = 3,\r\nDefault value is 0.",
          "format": "int32",
          "maximum": 3,
          "minimum": 0,
          "type": "integer"
        },
        "Id": {
          "description": "Unique Id provided by eAccounting for every row",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsServiceArticle": {
          "description": "IsServiceArticle = FALSE if the sales category for the article is of the type Goods\r\nIsServiceArticle = TRUE if the sales category for the article is of the type Service.",
          "readOnly": true,
          "type": "boolean"
        },
        "IsTextRow": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsVatFree": {
          "type": "boolean"
        },
        "IsWorkCost": {
          "readOnly": true,
          "type": "boolean"
        },
        "LineNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "MaterialCosts": {
          "description": "Only used for ROT/RUT invoices",
          "format": "double",
          "type": "number"
        },
        "PercentVat": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Text": {
          "description": "Default: The article's name",
          "type": "string"
        },
        "UnitAbbreviation": {
          "readOnly": true,
          "type": "string"
        },
        "UnitAbbreviationEnglish": {
          "readOnly": true,
          "type": "string"
        },
        "UnitId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "UnitPrice": {
          "description": "Format: 2 decimals allowed if the customer is domestic or 4 decimals if foreign",
          "format": "double",
          "type": "number"
        },
        "WorkCostType": {
          "description": "Only used for ROT/RUT invoices",
          "format": "int32",
          "type": "integer"
        },
        "WorkHours": {
          "description": "Only used for ROT/RUT invoices",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceVatApi": {
      "properties": {
        "AmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "VatAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "VatPercent": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        }
      },
      "type": "object"
    },
    "CustomerLabelApi": {
      "properties": {
        "Description": {
          "description": "Max length: 400 characters",
          "maxLength": 400,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "CustomerLedgerItemApi": {
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "description": "Source: Get from /v2/customers.",
          "format": "uuid",
          "type": "string"
        },
        "DueDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "description": "Purpose: Empty if UsesPaymentReferenceNumber not activated on the company. Use /v2/companysettings.",
          "maxLength": 50,
          "minLength": 0,
          "readOnly": true,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VoucherId": {
          "description": "Source: Get from /v2/vouchers/{fiscalyearid}.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "VoucherId"
      ],
      "type": "object"
    },
    "CustomerLedgerItemWithVoucherApi": {
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "description": "Source: Get from /v2/customers.",
          "format": "uuid",
          "type": "string"
        },
        "DueDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "description": "Empty if UsesPaymentReferenceNumber not activated on the company. Use /v2/companysettings.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "Voucher": {
          "$ref": "#/definitions/VoucherApi"
        }
      },
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "Voucher"
      ],
      "type": "object"
    },
    "DefaultQuerySettings": {
      "properties": {
        "EnableCount": {
          "type": "boolean"
        },
        "EnableExpand": {
          "type": "boolean"
        },
        "EnableFilter": {
          "type": "boolean"
        },
        "EnableOrderBy": {
          "type": "boolean"
        },
        "EnableSelect": {
          "type": "boolean"
        },
        "MaxTop": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DeliveryMethodApi": {
      "properties": {
        "Code": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "NameEnglish": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DeliveryTermApi": {
      "properties": {
        "Code": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Editable": {
          "type": "boolean"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "NameEnglish": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DirectDebitCustomerSettingsApi": {
      "properties": {
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "LatestDirectDebit": {
          "format": "date-time",
          "type": "string"
        },
        "MandateId": {
          "type": "string"
        },
        "MandateType": {
          "description": "Mandate Type values\r\nCore = 1,\r\nB2B = 2",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "SequenceType": {
          "description": "Sequence Type values\r\nRecurring = 1,\r\nRecurringFinal = 2,\r\nOneOff = 3",
          "enum": [
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "SigningDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DocumentApi": {
      "properties": {
        "ContentType": {
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameWithoutExtension": {
          "type": "string"
        },
        "Size": {
          "description": "Calculated in bytes",
          "format": "int32",
          "type": "integer"
        },
        "TemporaryUrl": {
          "description": "This is a temporary url that will expire and should not be stored.",
          "type": "string"
        },
        "Type": {
          "description": "0 = SupplierInvoiceDraftAttachment, 1 = SupplierInvoiceAttachment, 2 = SupplierInvoiceXml,\r\n10 = CustomerInvoiceXml, 11 = CustomerInvoicePdf, 12 = CustomerInvoicePaymentReminderPdf,\r\n13 = CompanyLogo, 14 = DocumentBackgroundPdf, 20 = PhotoReceipt, 21 = PhotoSupplierInvoice,\r\n30 = AutoInvoiceAssembly, 40 = FinvoiceReceiverInfoXml, 41 = VatReportPdf",
          "enum": [
            0,
            1,
            2,
            10,
            11,
            12,
            13,
            14,
            20,
            21,
            30,
            40,
            41,
            42
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DocumentApprovalEventApi": {
      "properties": {
        "CreatedByUserId": {
          "description": "The user id that did the action. Can be null if not undone. Use GET /v2/users",
          "format": "uuid",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "description": "0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EdmReferentialConstraintPropertyPair": {
      "properties": {
        "DependentProperty": {
          "$ref": "#/definitions/IEdmStructuralProperty",
          "readOnly": true
        },
        "PrincipalProperty": {
          "$ref": "#/definitions/IEdmStructuralProperty",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "EmailApi": {
      "properties": {
        "CcRecipients": {
          "description": "Default: The customer's cc email addresses",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Email": {
          "description": "Default: The customer's email address",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Message": {
          "description": "Default: The domestic or foreign company text from /v2/companysettings",
          "type": "string"
        },
        "Subject": {
          "description": "Default: The default email subject found in eAccounting followed by the company's name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FilterClause": {
      "properties": {
        "Expression": {
          "$ref": "#/definitions/SingleValueNode",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "FilterQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "FilterClause": {
          "$ref": "#/definitions/FilterClause",
          "readOnly": true
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "Validator": {
          "$ref": "#/definitions/FilterQueryValidator"
        }
      },
      "type": "object"
    },
    "FilterQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "FiscalYearApi": {
      "properties": {
        "BookkeepingMethod": {
          "description": "Purpose: When posting fiscalyear, previous years bookkeeping method is chosen. 0 = Invoicing, 1 = Cash, 2 = NoBookkeeping",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsLockedForAccounting": {
          "readOnly": true,
          "type": "boolean"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FiscalYearUpdateApi": {
      "properties": {
        "IsLockedForAccounting": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ForeignPaymentCodesAPI": {
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "CountryCode": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IEdmDirectValueAnnotationsManager": {
      "properties": {},
      "type": "object"
    },
    "IEdmEntityContainer": {
      "properties": {
        "Elements": {
          "items": {
            "$ref": "#/definitions/IEdmEntityContainerElement"
          },
          "readOnly": true,
          "type": "array"
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "Namespace": {
          "readOnly": true,
          "type": "string"
        },
        "SchemaElementKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IEdmEntityContainerElement": {
      "properties": {
        "Container": {
          "$ref": "#/definitions/IEdmEntityContainer",
          "readOnly": true
        },
        "ContainerElementKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IEdmExpression": {
      "properties": {
        "ExpressionKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IEdmModel": {
      "properties": {
        "DeclaredNamespaces": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "DirectValueAnnotationsManager": {
          "$ref": "#/definitions/IEdmDirectValueAnnotationsManager",
          "readOnly": true
        },
        "EntityContainer": {
          "$ref": "#/definitions/IEdmEntityContainer",
          "readOnly": true
        },
        "ReferencedModels": {
          "items": {
            "$ref": "#/definitions/IEdmModel"
          },
          "readOnly": true,
          "type": "array"
        },
        "SchemaElements": {
          "items": {
            "$ref": "#/definitions/IEdmSchemaElement"
          },
          "readOnly": true,
          "type": "array"
        },
        "VocabularyAnnotations": {
          "items": {
            "$ref": "#/definitions/IEdmVocabularyAnnotation"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "IEdmNavigationProperty": {
      "properties": {
        "ContainsTarget": {
          "readOnly": true,
          "type": "boolean"
        },
        "DeclaringType": {
          "$ref": "#/definitions/IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "OnDelete": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Partner": {
          "$ref": "#/definitions/IEdmNavigationProperty",
          "readOnly": true
        },
        "PropertyKind": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "ReferentialConstraint": {
          "$ref": "#/definitions/IEdmReferentialConstraint",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmNavigationPropertyBinding": {
      "properties": {
        "NavigationProperty": {
          "$ref": "#/definitions/IEdmNavigationProperty",
          "readOnly": true
        },
        "Path": {
          "$ref": "#/definitions/IEdmPathExpression",
          "readOnly": true
        },
        "Target": {
          "$ref": "#/definitions/IEdmNavigationSource",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmNavigationSource": {
      "properties": {
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "NavigationPropertyBindings": {
          "items": {
            "$ref": "#/definitions/IEdmNavigationPropertyBinding"
          },
          "readOnly": true,
          "type": "array"
        },
        "Path": {
          "$ref": "#/definitions/IEdmPathExpression",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmPathExpression": {
      "properties": {
        "ExpressionKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Path": {
          "readOnly": true,
          "type": "string"
        },
        "PathSegments": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "IEdmProperty": {
      "properties": {
        "DeclaringType": {
          "$ref": "#/definitions/IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "PropertyKind": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Type": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmReferentialConstraint": {
      "properties": {
        "PropertyPairs": {
          "items": {
            "$ref": "#/definitions/EdmReferentialConstraintPropertyPair"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "IEdmSchemaElement": {
      "properties": {
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "Namespace": {
          "readOnly": true,
          "type": "string"
        },
        "SchemaElementKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IEdmStructuralProperty": {
      "properties": {
        "DeclaringType": {
          "$ref": "#/definitions/IEdmStructuredType",
          "readOnly": true
        },
        "DefaultValueString": {
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "PropertyKind": {
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Type": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmStructuredType": {
      "properties": {
        "BaseType": {
          "$ref": "#/definitions/IEdmStructuredType",
          "readOnly": true
        },
        "DeclaredProperties": {
          "items": {
            "$ref": "#/definitions/IEdmProperty"
          },
          "readOnly": true,
          "type": "array"
        },
        "IsAbstract": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsOpen": {
          "readOnly": true,
          "type": "boolean"
        },
        "TypeKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IEdmTerm": {
      "properties": {
        "AppliesTo": {
          "readOnly": true,
          "type": "string"
        },
        "DefaultValue": {
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "Namespace": {
          "readOnly": true,
          "type": "string"
        },
        "SchemaElementKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Type": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IEdmType": {
      "properties": {
        "TypeKind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "IEdmTypeReference": {
      "properties": {
        "Definition": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        },
        "IsNullable": {
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IEdmVocabularyAnnotatable": {
      "properties": {},
      "type": "object"
    },
    "IEdmVocabularyAnnotation": {
      "properties": {
        "Qualifier": {
          "readOnly": true,
          "type": "string"
        },
        "Target": {
          "$ref": "#/definitions/IEdmVocabularyAnnotatable",
          "readOnly": true
        },
        "Term": {
          "$ref": "#/definitions/IEdmTerm",
          "readOnly": true
        },
        "Value": {
          "$ref": "#/definitions/IEdmExpression",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IServiceProvider": {
      "properties": {},
      "type": "object"
    },
    "InvoicePaymentApi": {
      "properties": {
        "BankFeeAmount": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "type": "number"
        },
        "BankTransactionId": {
          "description": "Purpose: The id inside eAccounting of the bank transaction corresponding to the payment",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "CompanyBankAccountId": {
          "description": "The bank account to which the payment is recorded",
          "format": "uuid",
          "type": "string"
        },
        "DomesticPaymentAmount": {
          "description": "Only for non domestic invoices paid with cheque account. If bank fee: for customer invoices, extract that amount here. For supplier invoices, do not extract bank fee amount here.",
          "format": "double",
          "type": "number"
        },
        "FactoringFeeAccountNumber": {
          "description": "Factoring account number, supported only for customer invoice payments",
          "format": "int64",
          "type": "integer"
        },
        "FactoringFeeAmount": {
          "description": "Factoring fee amount for the current invoice, supported only for customer invoice payments",
          "format": "double",
          "type": "number"
        },
        "PaymentAmount": {
          "description": "Amount in invoice currency. If bank fee: for customer invoices, extract that amount here. For supplier invoices, do not extract bank fee amount here.",
          "format": "double",
          "type": "number"
        },
        "PaymentCurrency": {
          "type": "string"
        },
        "PaymentDate": {
          "description": "Future dates cannot be set. Date format: yyyy-mm-dd",
          "format": "date-time",
          "type": "string"
        },
        "PaymentType": {
          "description": "1 = PartialPayment, 2 = CompletePayment, 3 = Rounding, 4 = Bank Charge",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "maximum": 4,
          "minimum": 1,
          "type": "integer"
        },
        "Reference": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "CompanyBankAccountId",
        "PaymentDate",
        "PaymentAmount",
        "PaymentCurrency",
        "PaymentType"
      ],
      "type": "object"
    },
    "InvoiceUrlApi": {
      "properties": {
        "Url": {
          "description": "URL to the invoice.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerVoucherRelationApi": {
      "properties": {
        "Amount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "SupplierId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessageApi": {
      "properties": {
        "CreatedByUserId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "MessageThreadId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedByUserId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Text": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessageReceiverApi": {
      "properties": {
        "IsCurrentUser": {
          "readOnly": true,
          "type": "boolean"
        },
        "Status": {
          "description": "The status type of the message \r\nNone = 0, New = 1, Read = 2, Open = 3, Close = 4",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "UserId": {
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "UserId"
      ],
      "type": "object"
    },
    "MessageStatusApi": {
      "properties": {
        "Status": {
          "description": "The status type of the message \r\nNone = 0, New = 1, Read = 2, Open = 3, Close = 4",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Status"
      ],
      "type": "object"
    },
    "MessageThreadApi": {
      "properties": {
        "DocumentId": {
          "description": "Default: No attached document\r\nUsed in combination with DocumentType, represents the unique identifier of the document to which it is attached",
          "format": "uuid",
          "type": "string"
        },
        "DocumentNumber": {
          "readOnly": true,
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type to which the message thread is attached \r\nNone = 0, CustomerInvoice = 1, CustomerInvoiceDraft = 2, SupplierInvoice = 3, Voucher = 4, Quotation = 5, Order = 6, SupplierInvoiceDraft = 7, WebshopOrder = 8, Customer = 9, Receipt = 10, Article = 11, VatReport = 12, Supplier = 13, Inventory = 14, Employee = 15, Payslip = 16, Image = 17, Reconciliation = 18,  QuoteDraft = 19, VoucherDraft = 20",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
          ],
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsClosed": {
          "readOnly": true,
          "type": "boolean"
        },
        "LastMessage": {
          "$ref": "#/definitions/MessageApi"
        },
        "MessageReceivers": {
          "items": {
            "$ref": "#/definitions/MessageReceiverApi"
          },
          "type": "array"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessageToPostApi": {
      "properties": {
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
          ],
          "format": "int32",
          "maximum": 16,
          "minimum": 0,
          "type": "integer"
        },
        "Message": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "MessageReceivers": {
          "items": {
            "$ref": "#/definitions/MessageReceiverApi"
          },
          "type": "array"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Message",
        "Subject",
        "DocumentType"
      ],
      "type": "object"
    },
    "NoteApi": {
      "properties": {
        "AttachedTo": {
          "description": "The document Id to which the note can be attached",
          "format": "uuid",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "DocumentType": {
          "description": "The document type to which the note is attached \r\nNone = 0, CustomerInvoice = 1, CustomerInvoiceDraft = 2, SupplierInvoice = 3, Voucher = 4, Quotation = 5, Order = 6, SupplierInvoiceDraft = 7, WebshopOrder = 8, Customer = 9, Receipt = 10, Article = 11, VatReport = 12, Supplier = 13, Inventory = 14, Employee = 15, Payslip = 16, Image = 17, Reconciliation = 18, QuoteDraft = 19, VoucherDraft = 20",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
          ],
          "format": "int32",
          "maximum": 18,
          "minimum": 0,
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsDone": {
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Text": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "UserId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ODataPath": {
      "properties": {
        "EdmType": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#/definitions/IEdmNavigationSource",
          "readOnly": true
        },
        "Path": {
          "items": {
            "$ref": "#/definitions/ODataPathSegment"
          },
          "readOnly": true,
          "type": "array"
        },
        "PathTemplate": {
          "readOnly": true,
          "type": "string"
        },
        "Segments": {
          "items": {
            "$ref": "#/definitions/ODataPathSegment"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "ODataPathSegment": {
      "properties": {
        "EdmType": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        },
        "Identifier": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ODataQueryContext": {
      "properties": {
        "DefaultQuerySettings": {
          "$ref": "#/definitions/DefaultQuerySettings",
          "readOnly": true
        },
        "ElementClrType": {
          "readOnly": true,
          "type": "string"
        },
        "ElementType": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        },
        "Model": {
          "$ref": "#/definitions/IEdmModel",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#/definitions/IEdmNavigationSource",
          "readOnly": true
        },
        "Path": {
          "$ref": "#/definitions/ODataPath",
          "readOnly": true
        },
        "RequestContainer": {
          "$ref": "#/definitions/IServiceProvider",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AccountApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AccountBalanceAPI]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AccountTypesAPI]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AllocationPeriodApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AppStoreActivationStatusApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[ArticleAccountCodingAPI]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[ArticleApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[ArticleLabelApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AttachmentResultApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[AutoInvoiceAddressApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[BankAccountApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[BankApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[BankTransactionApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CompanySettingsApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CostCenterApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CostCenterItemApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CountryApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CurrencyApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CustomerApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CustomerInvoiceApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CustomerInvoiceDraftApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CustomerLabelApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[CustomerLedgerItemApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[DeliveryMethodApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[DeliveryTermApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[DocumentApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[FiscalYearApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[ForeignPaymentCodesAPI]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[LedgerVoucherRelationApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[MessageApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[MessageThreadApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[NoteApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[OpeningBalancesApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[OrderApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[PartnerResourceLinkApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[ProjectApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[QuoteApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[StandardAccountApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[SupplierApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[SupplierInvoiceApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[SupplierInvoiceDraftApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[TermsOfPaymentApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[UnitApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[UserApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[VatCodeApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[VatReportApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[VoucherApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[VoucherDraftApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[WebHookApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryOptions[WebshopOrderApi]": {
      "properties": {
        "Apply": {
          "$ref": "#/definitions/ApplyQueryOption",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/CountQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "IfMatch": {
          "readOnly": true,
          "type": "object"
        },
        "IfNoneMatch": {
          "readOnly": true,
          "type": "object"
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "Request": {
          "readOnly": true,
          "type": "object"
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      },
      "type": "object"
    },
    "ODataQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "ODataRawQueryOptions": {
      "properties": {
        "Apply": {
          "readOnly": true,
          "type": "string"
        },
        "Count": {
          "readOnly": true,
          "type": "string"
        },
        "DeltaToken": {
          "readOnly": true,
          "type": "string"
        },
        "Expand": {
          "readOnly": true,
          "type": "string"
        },
        "Filter": {
          "readOnly": true,
          "type": "string"
        },
        "Format": {
          "readOnly": true,
          "type": "string"
        },
        "OrderBy": {
          "readOnly": true,
          "type": "string"
        },
        "Select": {
          "readOnly": true,
          "type": "string"
        },
        "Skip": {
          "readOnly": true,
          "type": "string"
        },
        "SkipToken": {
          "readOnly": true,
          "type": "string"
        },
        "Top": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "OpeningBalancesApi": {
      "properties": {
        "Balance": {
          "description": "The opening balance amount on the account",
          "format": "double",
          "type": "number"
        },
        "Name": {
          "description": "The name of the account",
          "type": "string"
        },
        "Number": {
          "description": "The account number",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OrderApi": {
      "properties": {
        "Amount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "BuyersOrderReference": {
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "description": "Purpose: This property will be set automatically depending on it's value which is set on the customer level",
          "readOnly": true,
          "type": "boolean"
        },
        "DeliveredAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredRoundingsAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredVatAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters\r\nDefault: The value on the selected customer",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD. \r\nDefault: null",
          "format": "date-time",
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 50 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters\r\nDefault: The value on the selected customer",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "HouseWorkAmount": {
          "format": "double",
          "type": "number"
        },
        "HouseWorkAutomaticDistribution": {
          "type": "boolean"
        },
        "HouseWorkCorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "HouseWorkPropertyName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IncludesVat": {
          "description": "Returns true if Amount and UnitPrice includes VAT. It will be automatically added based on company settings and customer type(private person or company).",
          "readOnly": true,
          "type": "boolean"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters\r\nDefault: The value on the selected customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Default: The value on the selected customer",
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters\r\nThe value on the selected customer",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Readonly\r\nThe selected customer's name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters\r\nDefault: The value on the selected customer",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "IsNotDelivered": {
          "readOnly": true,
          "type": "boolean"
        },
        "MessageThreads": {
          "description": "Fetch messages via GET /v2/messagethreads/{messageThreadId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Notes": {
          "description": "Fetch notes via GET /v2/notes/{notesId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Number": {
          "description": "Purpose: This property will be set automatically upon creation of an order",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "OrderDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Persons": {
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPersonApi"
          },
          "type": "array"
        },
        "ReverseChargeOnConstructionServices": {
          "type": "boolean"
        },
        "RotPropertyType": {
          "description": "1 = Apartment, 2 = Property\r\nLeave blank or set to null if you do not intend to use ROT or Green Technology functionality",
          "format": "int32",
          "type": "integer"
        },
        "RotReducedInvoicingPercent": {
          "description": "Format: 4 decimals",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "RotReducedInvoicingType": {
          "description": "0 = None, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "RoundingsAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/OrderRowApi"
          },
          "type": "array"
        },
        "SalesDocumentAttachments": {
          "description": "Fetch SalesDocumentAttachments via GET /v2/salesdocumentattachments/{attachmentId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "ShippedDateTime": {
          "description": "Format: YYYY-MM-DD. \r\nDefault: null",
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "description": "1 = Draft, 2 = Ongoing, 3 = Shipped, 4 = Invoiced",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "maximum": 4,
          "minimum": 1,
          "type": "integer"
        },
        "UsesGreenTechnology": {
          "description": "Set to true if this order benefits from deduction on Green Technology.\r\nIf set to true the order must have RotReducedInvoicingType set to normal and contain at least one row with applicable deduction.",
          "type": "boolean"
        },
        "VatAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "YourReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "CustomerId",
        "CurrencyCode",
        "EuThirdParty",
        "OrderDate",
        "Status",
        "RotReducedInvoicingType",
        "ReverseChargeOnConstructionServices"
      ],
      "type": "object"
    },
    "OrderByClause": {
      "properties": {
        "Direction": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Expression": {
          "$ref": "#/definitions/SingleValueNode",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "readOnly": true
        },
        "ThenBy": {
          "$ref": "#/definitions/OrderByClause",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "OrderByNode": {
      "properties": {
        "Direction": {
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "OrderByQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "OrderByClause": {
          "$ref": "#/definitions/OrderByClause",
          "readOnly": true
        },
        "OrderByNodes": {
          "items": {
            "$ref": "#/definitions/OrderByNode"
          },
          "readOnly": true,
          "type": "array"
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "Validator": {
          "$ref": "#/definitions/OrderByQueryValidator"
        }
      },
      "type": "object"
    },
    "OrderByQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "OrderRowApi": {
      "properties": {
        "Amount": {
          "description": "Returns a total amount of row. Format: 2 decimals",
          "format": "double",
          "type": "number"
        },
        "ArticleId": {
          "description": "Can be null if the row is a text row",
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "DeliveredQuantity": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DiscountPercentage": {
          "description": "Format: 4 decimals",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "EligibleForReverseChargeOnVat": {
          "type": "boolean"
        },
        "GreenTechnologyType": {
          "description": "Type of green technology on the order row, can be: \r\nNone = 0,\r\nSolarCellInstallation = 1,\r\nElectricEnergyStorageInstallation = 2,\r\nElectricVehicleChargingPointInstallation = 3,\r\nDefault value is 0.",
          "format": "int32",
          "maximum": 3,
          "minimum": 0,
          "type": "integer"
        },
        "Id": {
          "description": "Unique Id provided by eAccounting for every row",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsServiceArticle": {
          "description": "IsServiceArticle = FALSE if the sales category for the article is of the type Goods\r\nIsServiceArticle = TRUE if the sales category for the article is of the type Service.",
          "readOnly": true,
          "type": "boolean"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "LineNumber": {
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "MaterialCosts": {
          "description": "Only used for ROT/RUT.",
          "format": "double",
          "type": "number"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: 4 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Text": {
          "description": "Max length: 2000 characters\r\nDefault: For non text rows, default value will be the article's name",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitId": {
          "description": "Source: Get from /v2/units/{id}",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "UnitPrice": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "WorkCostType": {
          "description": "None = 0, RotConstructionWork = 1, RotElectricalWork = 2, RotGlassSheetMetalWork = 3, RotGroundWork = 4, RotBrickWork = 5, RotPaintDecorateWork = 6, RotPlumbWork = 7\r\nRutCleanJobWork = 9, RutCareClothTextile = 10, RutCook = 11, RutSnowRemove = 12, RutGarden = 13, RutBabySitt = 14, RutOtherCare = 15, RutHouseWorkHelp = 17\r\nRutRemovalServices = 18, RutITServices = 19, RotHeatPump = 20, RotHeatPump2 = 21, RutHomeAppliances = 22",
          "format": "int32",
          "type": "integer"
        },
        "WorkHours": {
          "description": "Only used for ROT/RUT.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "LineNumber",
        "IsTextRow",
        "IsWorkCost",
        "EligibleForReverseChargeOnVat"
      ],
      "type": "object"
    },
    "PaginatedResponse[AccountApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AccountApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AccountBalanceAPI]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AccountBalanceAPI"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AccountTypesAPI]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AccountTypesAPI"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AllocationPeriodApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AllocationPeriodApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AppStoreActivationStatusApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AppStoreActivationStatusApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[ArticleAccountCodingAPI]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/ArticleAccountCodingAPI"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[ArticleApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/ArticleApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[ArticleLabelApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/ArticleLabelApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AttachmentResultApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AttachmentResultApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[AutoInvoiceAddressApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/AutoInvoiceAddressApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[BankAccountApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/BankAccountApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[BankApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/BankApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[BankTransactionApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/BankTransactionApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CostCenterApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CostCenterApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CountryApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CountryApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CurrencyApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CurrencyApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CustomerApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CustomerApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CustomerInvoiceApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CustomerInvoiceDraftApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceDraftApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CustomerLabelApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CustomerLabelApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[CustomerLedgerItemApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/CustomerLedgerItemApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[DeliveryMethodApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/DeliveryMethodApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[DeliveryTermApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/DeliveryTermApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[FiscalYearApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/FiscalYearApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[ForeignPaymentCodesAPI]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/ForeignPaymentCodesAPI"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[LedgerVoucherRelationApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/LedgerVoucherRelationApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[OpeningBalancesApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/OpeningBalancesApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[OrderApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/OrderApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[PartnerResourceLinkApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/PartnerResourceLinkApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[ProjectApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/ProjectApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[QuoteApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/QuoteApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[StandardAccountApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/StandardAccountApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[SupplierApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/SupplierApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[SupplierInvoiceApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/SupplierInvoiceApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[SupplierInvoiceDraftApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/SupplierInvoiceDraftApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[TermsOfPaymentApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/TermsOfPaymentApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[UnitApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/UnitApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[UserApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/UserApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[VatCodeApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/VatCodeApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[VatReportApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/VatReportApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[VoucherApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/VoucherApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[VoucherDraftApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/VoucherDraftApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[WebHookApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/WebHookApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginatedResponse[WebshopOrderApi]": {
      "properties": {
        "Data": {
          "items": {
            "$ref": "#/definitions/WebshopOrderApi"
          },
          "type": "array"
        },
        "Meta": {
          "$ref": "#/definitions/PaginationMetadata"
        }
      },
      "required": [
        "Meta",
        "Data"
      ],
      "type": "object"
    },
    "PaginationMetadata": {
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "ServerTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "TotalNumberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNumberOfResults": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "CurrentPage",
        "PageSize",
        "TotalNumberOfPages",
        "TotalNumberOfResults",
        "ServerTimeUtc"
      ],
      "type": "object"
    },
    "PartnerResourceLinkApi": {
      "properties": {
        "Href": {
          "description": "Link to the third party solution page",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "PartnerCompanyName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "PartnerSystemName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ResourceId": {
          "description": "Purpose: Link to the resource in eAccounting",
          "format": "uuid",
          "type": "string"
        },
        "ResourceType": {
          "description": "0 = Article, 1 = Customer, 2 = Supplier, 3 = CustomerInvoice, 4 = SupplierInvoice,\r\n5 = CustomerInvoiceDraft, 6 = SupplierInvoiceDraft",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "ResourceId",
        "ResourceType",
        "Href",
        "PartnerCompanyName",
        "PartnerSystemName"
      ],
      "type": "object"
    },
    "PaymentReminderEmailApi": {
      "properties": {
        "EmailDetails": {
          "$ref": "#/definitions/EmailApi"
        },
        "LatePaymentFee": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PaymentVoucherApi": {
      "properties": {
        "NumberSeries": {
          "description": "Purpose: Returns the number series. Use parameter useDefaultVoucherSeries with false value to set Series.",
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/PaymentVoucherRowApi"
          },
          "type": "array"
        },
        "VoucherDate": {
          "description": "Format: yyyy-mm-dd",
          "format": "date-time",
          "type": "string"
        },
        "VoucherText": {
          "description": "Max length: 1000 characters",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "VoucherDate",
        "VoucherText",
        "Rows"
      ],
      "type": "object"
    },
    "PaymentVoucherRowApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DebitAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "PayableId": {
          "description": "Purpose: Id of the supplier invoice to be paid",
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "ReceivableId": {
          "description": "Purpose: Id of the customer invoice to be paid",
          "format": "uuid",
          "type": "string"
        },
        "TransactionText": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "AccountNumber"
      ],
      "type": "object"
    },
    "ProjectApi": {
      "properties": {
        "CustomerId": {
          "description": "Source: Get from /v2/customers",
          "format": "uuid",
          "type": "string"
        },
        "CustomerName": {
          "description": "Purpose: CustomerName depending on CustomerId",
          "readOnly": true,
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedUtc": {
          "description": "Purpose: Is automatically set",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 200 characters",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Notes": {
          "description": "Max length: 500 characters",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Number": {
          "description": "Max length: 9 characters",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "description": "1 = Ongoing, 2 = Finished",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Number",
        "Name",
        "StartDate"
      ],
      "type": "object"
    },
    "QuoteApi": {
      "properties": {
        "ApprovedDate": {
          "description": "Default: null. Value will be set if the quote is approved",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "BuyersOrderReference": {
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "CompanyReference": {
          "description": "Equivalent for property OurReference in OrderApi and CustomerInvoiceApi models.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "readOnly": true,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "readOnly": true,
          "type": "boolean"
        },
        "CustomerReference": {
          "description": "Equivalent for property YourReference in OrderApi and CustomerInvoiceApi models.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD. Default: null",
          "format": "date-time",
          "type": "string"
        },
        "DeliveryMethodCode": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryMethodName": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "DeliveryTermCode": {
          "readOnly": true,
          "type": "string"
        },
        "DeliveryTermName": {
          "readOnly": true,
          "type": "string"
        },
        "DueDate": {
          "description": "Format: YYYY-MM-DD. Default: null",
          "format": "date-time",
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IncludesVat": {
          "description": "Returns true if Amount and UnitPrice includes VAT. It will be automatically added based on company settings and customer type(private person or company).",
          "readOnly": true,
          "type": "boolean"
        },
        "InvoiceAddress1": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "readOnly": true,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Default: The value on the selected customer",
          "readOnly": true,
          "type": "string"
        },
        "IsDomestic": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsNotDelivered": {
          "readOnly": true,
          "type": "boolean"
        },
        "MessageThreads": {
          "description": "Fetch messages via GET /v2/messagethreads/{messageThreadId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "ModifiedUtc": {
          "description": "Date and time of the last document modification.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Notes": {
          "description": "Fetch notes via GET /v2/notes/{notesId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Number": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Persons": {
          "description": "Only available for ROT/RUT or Green Technology",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPersonApi"
          },
          "type": "array"
        },
        "QuoteDate": {
          "description": "Format: YYYY-MM-DD. Default: null",
          "format": "date-time",
          "type": "string"
        },
        "RotPropertyType": {
          "description": "1 = Apartment, 2 = Property\r\nLeave blank or set to null if you do not intend to use ROT or Green Technology functionality",
          "format": "int32",
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "description": "Format: 2 decimals",
          "format": "double",
          "type": "number"
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "readOnly": true,
          "type": "boolean"
        },
        "RotReducedInvoicingOrgNumber": {
          "description": "Max length: 11 characters",
          "type": "string"
        },
        "RotReducedInvoicingPercent": {
          "description": "Format: 4 decimals",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Max length: 40 characters",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "description": "0 = Normal, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "RoundingsAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/QuoteRowApi"
          },
          "type": "array"
        },
        "SalesDocumentAttachments": {
          "description": "Fetch SalesDocumentAttachments via GET /v2/salesdocumentattachments/{attachmentId}",
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "Status": {
          "description": "0 = Draft, 1 = Ongoing, 2 = Approved, 3 = Invoiced",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "TermsOfPayment": {
          "$ref": "#/definitions/TermsOfPaymentApi"
        },
        "TotalAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "UsesGreenTechnology": {
          "description": "Set to true if this quote benefits from deduction on Green Technology.\r\nIf set to true the quote must have RotReducedInvoicingType set to normal and contain at least one row with applicable deduction.",
          "type": "boolean"
        },
        "VatAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        }
      },
      "required": [
        "CustomerId"
      ],
      "type": "object"
    },
    "QuoteConversionApi": {
      "properties": {
        "Type": {
          "description": "0 = OrderDraft, 1 = Order",
          "enum": [
            0,
            1
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "QuoteRowApi": {
      "properties": {
        "Amount": {
          "description": "Returns a total amount of row. Format: 2 decimals",
          "format": "double",
          "type": "number"
        },
        "ArticleId": {
          "description": "Source: Get from /v2/articles",
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "readOnly": true,
          "type": "string"
        },
        "ContributionMargin": {
          "$ref": "#/definitions/ContributionMarginApi",
          "description": "Contribution margin variables"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "DiscountPercentage": {
          "description": "Format: 4 decimals",
          "format": "double",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "GreenTechnologyType": {
          "description": "Type of green technology on the quote row, can be : \r\nNone = 0,\r\nSolarCellInstallation = 1,\r\nElectricEnergyStorageInstallation = 2,\r\nElectricVehicleChargingPointInstallation = 3,\r\nDefault value is 0.",
          "format": "int32",
          "maximum": 3,
          "minimum": 0,
          "type": "integer"
        },
        "Id": {
          "description": "Unique Id provided by eAccounting for every row",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsServiceArticle": {
          "description": "IsServiceArticle = FALSE if the sales category for the article is of the type Goods\r\nIsServiceArticle = TRUE if the sales category for the article is of the type Service.",
          "readOnly": true,
          "type": "boolean"
        },
        "IsTextRow": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsVatFree": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsWorkCost": {
          "readOnly": true,
          "type": "boolean"
        },
        "LineNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "MaterialCosts": {
          "description": "Only used for ROT/RUT.",
          "format": "double",
          "type": "number"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: 4 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Text": {
          "description": "Max length: 2000 characters\r\nDefault: The selected article's name",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitId": {
          "description": "Source: Get from /v2/units/{id}",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "UnitPrice": {
          "description": "Format: 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "WorkCostType": {
          "description": "0 = None, 1 = RotConstructionWork , 2 = RotElectricalWork , 3 = RotGlassSheetMetalWork , 4 = RotGroundWork , 5 = RotBrickWork , 6 = RotPaintDecorateWork , 7 = RotPlumbWork \r\n9 = RutCleanJobWork , 10 = RutCareClothTextile , 11 = RutCook , 12 = RutSnowRemove , 13 = RutGarden , 14 = RutBabySitt , 15 = RutOtherCare , 17 = RutHouseWorkHelp   \r\n18 = RutRemovalServices , 19 = RutITServices , 20 = RotHeatPump , 21 = RotHeatPump2 , 22 = RutHomeAppliances",
          "format": "int32",
          "type": "integer"
        },
        "WorkHours": {
          "description": "Only used for ROT/RUT.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "RangeVariable": {
      "properties": {
        "Kind": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Name": {
          "readOnly": true,
          "type": "string"
        },
        "TypeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "RelatedAccounts": {
      "properties": {
        "AccountNumber1": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber2": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber3": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SalesDocumentAttachmentApi": {
      "properties": {
        "CreatedBy": {
          "description": "Full name of user who attached the file.",
          "type": "string"
        },
        "CreatedUtc": {
          "description": "Attachment date (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "DocumentId": {
          "description": "Sales document ID.",
          "format": "uuid",
          "type": "string"
        },
        "DocumentSize": {
          "description": "Attached file size.",
          "format": "int32",
          "type": "integer"
        },
        "DocumentType": {
          "description": "Sales document type:\r\nCustomerInvoiceDraft = 1,\r\nCustomerInvoice = 2,\r\nQuote = 3,\r\nOrder = 4,\r\nPurchaseOrder = 5,\r\nQuoteDraft = 6",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Attachment ID.",
          "format": "uuid",
          "type": "string"
        },
        "OriginalFilename": {
          "description": "Attached file name.",
          "type": "string"
        },
        "Thumbnail": {
          "description": "It is an image thumbnail, for PDF's Thumbnail = NULL.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SalesDocumentAttachmentUploadApi": {
      "properties": {
        "ContentType": {
          "description": "Required\r\n= ['application/pdf']",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Data": {
          "description": "Data or Url is required.\r\nFormat: Must be Base64 encoded byte array.",
          "type": "string"
        },
        "DockumentId": {
          "description": "Required\r\nDocument's id to which a sales document is beeing attached.",
          "format": "uuid",
          "type": "string"
        },
        "FileName": {
          "description": "Required\r\nThe file name that will be shown in UI.",
          "type": "string"
        },
        "Url": {
          "description": "Must be public URL",
          "type": "string"
        }
      },
      "required": [
        "ContentType",
        "FileName",
        "DockumentId"
      ],
      "type": "object"
    },
    "SalesDocumentRotRutReductionPersonApi": {
      "properties": {
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Ssn": {
          "description": "Max length: 50 characters. Purpose: Social security number",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Ssn"
      ],
      "type": "object"
    },
    "SelectExpandClause": {
      "properties": {
        "AllSelected": {
          "readOnly": true,
          "type": "boolean"
        },
        "SelectedItems": {
          "items": {
            "$ref": "#/definitions/SelectItem"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "SelectExpandQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "LevelsMaxLiteralExpansionDepth": {
          "format": "int32",
          "type": "integer"
        },
        "RawExpand": {
          "readOnly": true,
          "type": "string"
        },
        "RawSelect": {
          "readOnly": true,
          "type": "string"
        },
        "SelectExpandClause": {
          "$ref": "#/definitions/SelectExpandClause",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/SelectExpandQueryValidator"
        }
      },
      "type": "object"
    },
    "SelectExpandQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "SelectItem": {
      "properties": {},
      "type": "object"
    },
    "SingleValueNode": {
      "properties": {
        "Kind": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "TypeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "SkipQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "Validator": {
          "$ref": "#/definitions/SkipQueryValidator"
        },
        "Value": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SkipQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "StandardAccountApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "AccountType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SupplierApi": {
      "properties": {
        "Address1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Address2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AutomaticPaymentService": {
          "description": "Purpose: Indicates if the supplier is paid by an automatic payment service. Supplier invoices to such suppliers will not be sent to the bank via the bank integration\r\nDefault value: false",
          "type": "boolean"
        },
        "BankAccountNumber": {
          "description": "Max length: 50 characters. Purpose: Only used in norwegian, dutch and danish eAccounting for domestic payments",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "BankBban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with Bank Code (SupplierBankCode)\r\nFormat NO: 11 characters, Format DK: 11-14 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z0-9]{1,35}$",
          "type": "string"
        },
        "BankBic": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with IBAN (SupplierBankIban)\r\nFormat: 6 letters followed by 2 or 5 characters (total length 8 or 11)",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{6}([a-zA-z0-9]{2}|[a-zA-z0-9]{5})$",
          "type": "string"
        },
        "BankCode": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BBAN (SupplierBankBban)\r\nFormat: 2 letters followed by at least 3 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^([a-zA-Z]{2})[a-zA-Z0-9]{3,}$",
          "type": "string"
        },
        "BankCountryCode": {
          "description": "Max length: 2 characters. Default value: Country of the supplier",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "BankFeeCode": {
          "description": "Purpose: Used for foreign payments to determine which party that pays for aditional bank fees. 0 = None, 1 = SenderPaysAllBankCharges, 2 = ReceiverPaysAllBankCharges, 3 = ReceiverPaysForeignCosts",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "BankIban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BIC (SupplierBankBic)\r\nFormat: 2 letters for country code, 2 control digits, 3 characters for bank identification",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-z0-9]{1,}$",
          "type": "string"
        },
        "BankName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "BankgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ForeignPaymentCodeId": {
          "description": "Source: Get from /v2/foreignpaymentcodes. Purpose: Used for categorization of foreign purchases (NO and SE only).",
          "format": "uuid",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "IsActive": {
          "description": "Default: true",
          "type": "boolean"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 400 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "PayFromBankAccountId": {
          "description": "Source: Get from /v2/bankaccounts. Purpose: Used for foreign payments to determine which bankaccount the payment will be from",
          "format": "uuid",
          "type": "string"
        },
        "PlusgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "SupplierNumber": {
          "description": "Max length: 16 characters. Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "description": "Source: Get from /v2/termsofpayment",
          "format": "uuid",
          "type": "string"
        },
        "UnpaidInvoicesAmount": {
          "format": "double",
          "type": "number"
        },
        "UsesPaymentReferenceNumbers": {
          "description": "Purpose: Used if the supplier uses payment reference numbers, OCR, KID etc. NO and SE only. Default: false",
          "type": "boolean"
        },
        "VatNumber": {
          "description": "Max length: 20 characters. Purpose: Only used in dutch eAccounting, used to check the VAT number before deducting the VAT (legislation) or for 3rd parties to validate supplier invoice information",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "Name",
        "TermsOfPaymentId"
      ],
      "type": "object"
    },
    "SupplierInvoiceApi": {
      "properties": {
        "AllocationPeriods": {
          "description": "Purpose: For create use POST /v2/allocationperiods",
          "items": {
            "$ref": "#/definitions/AllocationPeriodApi"
          },
          "readOnly": true,
          "type": "array"
        },
        "Attachments": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "AutoCreditDebitPairing": {
          "type": "boolean"
        },
        "BankAccountId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "BankGiroNumber": {
          "readOnly": true,
          "type": "string"
        },
        "CreatedFromDraftId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "DueDate": {
          "description": "Format: YYYY-MM-DD. Default: Date based on the supplier's terms of payment",
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: This is automatically generated by eAccounting upon creation",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "IsDomestic": {
          "readOnly": true,
          "type": "boolean"
        },
        "IsQuickInvoice": {
          "readOnly": true,
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "OcrNumber": {
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "PaymentFileStatus": {
          "description": "NoPaymentNecessary = 0, ReadyForAutomaticBankIntegration = 11, PaymentCreated = 12, PaymentReceivedByAutoPay = 13, PaymentSentToBank = 19, PaymentReceivedByBank = 20,\r\nReadyForManualPaymentFileExport = 21, ReadyForManualPaymentFileExportForeign = 22, ManualPaymentFileExported = 29, PaymentPaidInBank = 30, ReadyForDeferredAutomaticBankIntegration = 31,\r\nAwaitsSigning = 40, Signed = 41, PaymentRejectedByBank = 42, PaymentCancelledInBank = 43, PaymentCancelledInAutopay = 44, PaymentCancellationRequestSent = 45, FailedToSendToBank = 100",
          "enum": [
            0,
            11,
            12,
            13,
            19,
            20,
            21,
            22,
            29,
            30,
            31,
            40,
            41,
            42,
            43,
            44,
            45,
            100
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "PaymentStatus": {
          "description": "Unpaid = 3, PartiallyPaidOverDue = 4, PartiallyPaid = 5, Paid = 6, OverDue = 7, NotExportedToPaymentFile = 8,\r\nPaidInBank = 9, NotSentToBank = 10, AwaitingSigning = 11, CancellationRequestSentToBank = 12, PaymentCancelled = 13,\r\nRejectedPayment = 14, SentToBank = 15, ReceivedByBank = 16, PaymentExported = 17",
          "enum": [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "PlusGiroNumber": {
          "readOnly": true,
          "type": "string"
        },
        "RemainingAmount": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/SupplierInvoiceRowApi"
          },
          "type": "array"
        },
        "SelfEmployedWithoutFixedAddress": {
          "readOnly": true,
          "type": "boolean"
        },
        "SetOffAmountInvoiceCurrency": {
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "SkipSendToBank": {
          "description": "Invoice paid manually, won't be sent to the bank. Requires active bank integration.",
          "readOnly": true,
          "type": "boolean"
        },
        "Status": {
          "description": "0 = Draft, 1 = Normal, 2 = Deleted",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "SupplierId": {
          "description": "Source: Get from /v2/suppliers.",
          "format": "uuid",
          "type": "string"
        },
        "SupplierName": {
          "readOnly": true,
          "type": "string"
        },
        "SupplierNumber": {
          "readOnly": true,
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "type": "number"
        },
        "VatHigh": {
          "description": "Only for Norway",
          "format": "double",
          "type": "number"
        },
        "VatLow": {
          "description": "Only for Norway",
          "format": "double",
          "type": "number"
        },
        "VatMedium": {
          "description": "Only for Norway",
          "format": "double",
          "type": "number"
        },
        "VoucherId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "VoucherNumber": {
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "SupplierId",
        "InvoiceNumber",
        "TotalAmount"
      ],
      "type": "object"
    },
    "SupplierInvoiceDraftApi": {
      "properties": {
        "AllocationPeriods": {
          "description": "Purpose: For create use POST /v2/allocationperiods.",
          "items": {
            "$ref": "#/definitions/AllocationPeriodApi"
          },
          "readOnly": true,
          "type": "array"
        },
        "ApprovalStatus": {
          "description": "Purpose: Use /v2/approval/supplierinvoice/{id}. 0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval, 4 = ActionRequired",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "Attachments": {
          "$ref": "#/definitions/AttachmentLinkApi"
        },
        "BankAccountId": {
          "description": "Source: Get from /v2/bankaccounts, if not provided the supplier bank account will be used.",
          "format": "uuid",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "description": "Purpose: If currency code is domestic and currency rate isn't included it will be fetched from eAccounting",
          "format": "double",
          "type": "number"
        },
        "DueDate": {
          "description": "Format: YYYY-MM-DD. Default: Date based on the suppliers Terms of payment",
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "InvoiceDate": {
          "description": "Format: YYYY-MM-DD. Default: Today's date",
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "IsDomestic": {
          "type": "boolean"
        },
        "IsQuickInvoice": {
          "type": "boolean"
        },
        "Message": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "OcrNumber": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "PaymentDate": {
          "description": "Format: YYYY-MM-DD",
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/SupplierInvoiceDraftRowApi"
          },
          "type": "array"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "SkipSendToBank": {
          "description": "Invoice paid manually, won't be sent to the bank. Requires active bank integration.",
          "readOnly": true,
          "type": "boolean"
        },
        "SupplierId": {
          "description": "Source: Get from /v2/suppliers",
          "format": "uuid",
          "type": "string"
        },
        "SupplierName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TotalAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Vat": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatHigh": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatLow": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatMedium": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "SupplierId",
        "IsCreditInvoice",
        "Rows"
      ],
      "type": "object"
    },
    "SupplierInvoiceDraftRowApi": {
      "properties": {
        "AccountName": {
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DebitAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting. This property will be updated on every change on the supplier invoice draft",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "LineNumber": {
          "description": "Default: 1",
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "ProportionalVatRateValue": {
          "description": "Only for Norway",
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "type": "string"
        },
        "VatAmount": {
          "description": "Only for Denmark and Netherlands",
          "format": "double",
          "type": "number"
        },
        "VatCodeId": {
          "description": "Purpose: Returns the Vat code id from the provided account number",
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceRowApi": {
      "properties": {
        "AccountName": {
          "readOnly": true,
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters.",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters.",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters.",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DebetAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Purpose: This is automatically generated by eAccounting upon creation",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "LineNumber": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects.",
          "format": "uuid",
          "type": "string"
        },
        "ProportionalVatRateValue": {
          "description": "Only for Norway",
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "type": "string"
        },
        "VatAmount": {
          "description": "Only for Denmark and Netherlands",
          "format": "double",
          "type": "number"
        },
        "VatCodeId": {
          "description": "Only for Denmark and Netherlands",
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "type": "object"
    },
    "TaxDeclarationDateApi": {
      "properties": {
        "Day": {
          "description": "Range: 1 - 31",
          "format": "int32",
          "maximum": 31,
          "minimum": 1,
          "type": "integer"
        },
        "Month": {
          "description": "Range: 1 - 12",
          "format": "int32",
          "maximum": 12,
          "minimum": 1,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TermsOfPaymentApi": {
      "properties": {
        "AvailableForPurchase": {
          "type": "boolean"
        },
        "AvailableForSales": {
          "type": "boolean"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "NumberOfDays": {
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeId": {
          "description": "0 = Normal, 1 = CurrentMonth, 2 = Cash, 3 = CardPayment, 4 = DigitalWallet, 5 = PaymentServiceProvider",
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeText": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopQueryOption": {
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "readOnly": true,
          "type": "string"
        },
        "Validator": {
          "$ref": "#/definitions/TopQueryValidator"
        },
        "Value": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TopQueryValidator": {
      "properties": {},
      "type": "object"
    },
    "TransformationNode": {
      "properties": {
        "Kind": {
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UnitApi": {
      "properties": {
        "Abbreviation": {
          "type": "string"
        },
        "AbbreviationEnglish": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserApi": {
      "properties": {
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsConsultant": {
          "type": "boolean"
        },
        "IsCurrentUser": {
          "type": "boolean"
        },
        "LastName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VatCodeApi": {
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "OssCodeType": {
          "description": "0 = None, 1 = Sales, 2 = Vat",
          "enum": [
            0,
            1,
            2
          ],
          "format": "int32",
          "type": "integer"
        },
        "RelatedAccounts": {
          "$ref": "#/definitions/RelatedAccounts"
        },
        "VatRate": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VatReportApi": {
      "properties": {
        "ApprovalEventsHistory": {
          "description": "The history of approval events of the vat report.",
          "items": {
            "$ref": "#/definitions/DocumentApprovalEventApi"
          },
          "type": "array"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "description": "0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "format": "int32",
          "type": "integer"
        },
        "DocumentId": {
          "description": "Purpose: Fetch the associated document. Can be null if the vat report does not have an associated file created. Use GET /v2/documents/{id}",
          "format": "uuid",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "IsRegretted": {
          "description": "Indicates whether the vat report was undone",
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "RegrettedByUserId": {
          "description": "Purpose: If the vat report was undone this indicates the user id that did the action. Can be null if not undone. Use GET /v2/users",
          "format": "uuid",
          "type": "string"
        },
        "RegrettedDate": {
          "description": "Purpose: If the vat report was undone this indicates the date of the action. Can be null if not undone",
          "format": "date-time",
          "type": "string"
        },
        "SentForApprovalByUserId": {
          "description": "Purpose: If the vat report was sent for approval this indicates the user id that did the action. Can be null if not sent for approval. Use GET /v2/users",
          "format": "uuid",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "TotalAmount": {
          "description": "Predicted vat amount to pay or be refunded",
          "format": "double",
          "type": "number"
        },
        "VoucherId": {
          "description": "Purpose: Fetch the associated voucher. Can be null if there is no associated voucher. Use GET /v2/vouchers/{fiscalyearId}/{voucherId}",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VoucherApi": {
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentLinkApi"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "NumberAndNumberSeries": {
          "description": "Purpose: Returns the voucher number.",
          "readOnly": true,
          "type": "string"
        },
        "NumberSeries": {
          "description": "Purpose: Returns the number series. Use parameter useDefaultVoucherSeries with false value to set Series.",
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/VoucherRowApi"
          },
          "type": "array"
        },
        "SourceId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "VoucherDate": {
          "description": "Format: yyyy-mm-dd",
          "format": "date-time",
          "type": "string"
        },
        "VoucherText": {
          "description": "Max length: 1000 characters",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "VoucherType": {
          "description": "2 = ManualVoucher, 5 = BankAccountTransferDeposit, 6 = BankAccountTransferWithDrawal, \r\n7 = PurchaseReceipt, 8 = VatReport, 9 = SieImport, 10 = BankTransactionDeposit, 11 = BankTransactionWithdrawal,\r\n12 = SupplierInvoiceDebit, 13 = SupplierInvoiceCredit, 14 = CustomerInvoiceDebit, 15 = CustomerInvoiceCredit,\r\n16 = ClaimOnCardAcquirer, 17 = TaxReturn, 18 = AllocationPeriod, 19 = AllocationPeriodCorrection, \r\n20 = InventoryEvent, 21 = EmployerReport, 22 = Payslip, 23 = CustomerQuickInvoiceDebit,\r\n24 = CustomerQuickInvoiceCredit, 25 = SupplierQuickInvoiceDebit, 26 = SupplierQuickInvoiceCredit, \r\n27 = IZettleVoucher",
          "enum": [
            2,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30
          ],
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "VoucherDate",
        "VoucherText",
        "Rows"
      ],
      "type": "object"
    },
    "VoucherDraftApi": {
      "properties": {
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Id": {
          "description": "Purpose: Unique Id provided by eAccounting",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "NumberSeries": {
          "description": "Purpose: Returns the number series. If not set, will be used the default number series.",
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/VoucherDraftRowApi"
          },
          "type": "array"
        },
        "VoucherDate": {
          "description": "Format: yyyy-mm-dd",
          "format": "date-time",
          "type": "string"
        },
        "VoucherText": {
          "description": "Description. Max length: 1000 characters",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "VoucherDate"
      ],
      "type": "object"
    },
    "VoucherDraftRowApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DebitAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "VatCodeId": {
          "description": "Purpose: Returns vat code id. If is set, is used to calculate the correspondent vat amount.",
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "AccountNumber"
      ],
      "type": "object"
    },
    "VoucherRowApi": {
      "properties": {
        "AccountDescription": {
          "readOnly": true,
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DebitAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "description": "Max length: 60 characters",
          "maxLength": 60,
          "minLength": 0,
          "type": "string"
        },
        "VatAmount": {
          "format": "double",
          "type": "number"
        },
        "VatCodeAndPercent": {
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "AccountNumber"
      ],
      "type": "object"
    },
    "VoucherWithOverunderPaymentApi": {
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentLinkApi"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/VoucherWithOverunderPaymentRowApi"
          },
          "type": "array"
        },
        "VoucherDate": {
          "description": "Format: yyyy-mm-dd",
          "format": "date-time",
          "type": "string"
        },
        "VoucherText": {
          "description": "Default: Default text for payment from customer or supplier",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        }
      },
      "required": [
        "VoucherDate",
        "Rows"
      ],
      "type": "object"
    },
    "VoucherWithOverunderPaymentRowApi": {
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "CostCenterItemId1": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "description": "Source: Get from /v2/costcenters",
          "format": "uuid",
          "type": "string"
        },
        "CreditAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "DebitAmount": {
          "description": "Format: Max 2 decimals",
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "description": "Source: Get from /v2/projects",
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "SupplierId": {
          "format": "uuid",
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "Weight": {
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        }
      },
      "required": [
        "AccountNumber"
      ],
      "type": "object"
    },
    "WebHookApi": {
      "properties": {
        "Active": {
          "type": "boolean"
        },
        "AuthenticationKey": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "AuthenticationValue": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ClientId": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "Description": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Endpoint": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "SigningKey": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Subscriptions": {
          "items": {
            "$ref": "#/definitions/WebHookSubscriptionApi"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WebHookSubscriptionApi": {
      "properties": {
        "SubscriptionType": {
          "description": "The document type to which the note is attached \r\nNone = 0, Article = 1, Customer = 2, CustomerInvoice = 3, CustomerInvoiceDraft = 4, Order = 5, Supplier = 6, SupplierInvoice = 7, SupplierInvoiceDraft = 8, Quote = 9, Voucher = 10, Account = 11, FiscalYear = 12, CostCenter = 13, CostCenterItem = 14",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14
          ],
          "format": "int32",
          "maximum": 14,
          "minimum": 0,
          "type": "integer"
        },
        "WebHookId": {
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebshopOrderApi": {
      "properties": {
        "BaseCurrencyCode": {
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "OrderCurrencyCode": {
          "type": "string"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string"
        },
        "OrderNumber": {
          "type": "string"
        },
        "Rows": {
          "items": {
            "$ref": "#/definitions/WebshopOrderRowApi"
          },
          "type": "array"
        },
        "TotalAmountBaseCurrency": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountOrderCurrency": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "WebshopOrderRowApi": {
      "properties": {
        "ArticleName": {
          "type": "string"
        },
        "ArticleNumber": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "PercentVat": {
          "format": "double",
          "type": "number"
        },
        "PricePerUnitInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        },
        "UnitAbbreviation": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "eaccountingapi-sandbox.test.vismaonline.com",
  "info": {
    "title": "Visma eAccounting API V2",
    "version": "v2"
  },
  "paths": {
    "/v2/accountTypes": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AccountTypesV2_GetDefaultAccountTypes",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AccountTypesAPI]"
            }
          }
        },
        "summary": "Gets the default account types. This is applicable on all countries but most relevant for the Netherlands.",
        "tags": [
          "AccountTypesV2"
        ]
      }
    },
    "/v2/accountbalances/{accountNumber}/{date}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "AccountBalanceV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "int32",
            "in": "path",
            "name": "accountNumber",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Format: yyyy-MM-dd",
            "format": "date-time",
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountBalanceAPI"
            }
          }
        },
        "summary": "Get Account Balance on a specific account and date.",
        "tags": [
          "AccountBalanceV2"
        ]
      }
    },
    "/v2/accountbalances/{date}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "AccountBalanceV2_Get",
        "parameters": [
          {
            "description": "Format: yyyy-MM-dd",
            "format": "date-time",
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AccountBalanceAPI]"
            }
          }
        },
        "summary": "Get Account balance on a specific date (yyyy-MM-dd). Filter to include accounts where balance is 0.",
        "tags": [
          "AccountBalanceV2"
        ]
      }
    },
    "/v2/accounts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AccountApi]"
            }
          }
        },
        "summary": "Get a list of accounts",
        "tags": [
          "AccountsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Add a account to a given fiscalyear. Use the required FiscalYearId property to specify the fiscal year.<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "apiAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountApi"
            }
          },
          {
            "description": "If true, eAccounting will provide the standard account type. \r\n            If false, you have to provide your own, can be found at /v2/accounttypes. \r\n            Account types can only be set on dutch companies.",
            "in": "query",
            "name": "useDefaultAccountType",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccountApi"
            }
          }
        },
        "summary": "Add a account",
        "tags": [
          "AccountsV2"
        ]
      }
    },
    "/v2/accounts/standardaccounts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Predefined standard accounts are for dutch companies only.<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[StandardAccountApi]"
            }
          }
        },
        "summary": "Get a list of the predefined standard accounts.",
        "tags": [
          "AccountsV2"
        ]
      }
    },
    "/v2/accounts/{fiscalyearId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get a list of accounts for a given fiscalyear.<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "fiscalyearId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AccountApi]"
            }
          }
        },
        "summary": "Get a list of accounts",
        "tags": [
          "AccountsV2"
        ]
      }
    },
    "/v2/accounts/{fiscalyearId}/{accountNumber}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Get a account from a given fiscalyear by specifying the account number.<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "fiscalyearId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "int32",
            "in": "path",
            "name": "accountNumber",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountApi"
            }
          }
        },
        "summary": "Get a account",
        "tags": [
          "AccountsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Replace a account in a given fiscal year. Will only replace the account in that fiscal year.<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "AccountsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "fiscalyearId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "int64",
            "in": "path",
            "name": "accountNumber",
            "required": true,
            "type": "integer"
          },
          {
            "description": "",
            "in": "body",
            "name": "replacedAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountApi"
            }
          }
        },
        "summary": "Replace a account",
        "tags": [
          "AccountsV2"
        ]
      }
    },
    "/v2/allocationperiods": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "AllocationPeriodsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AllocationPeriodApi]"
            }
          }
        },
        "summary": "Get allocation periods.",
        "tags": [
          "AllocationPeriodsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "AllocationPeriodsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "allocationPlans",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/AllocationPlan"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AllocationPeriodApi"
            }
          }
        },
        "summary": "Add allocation periods for voucher or supplier invoice.",
        "tags": [
          "AllocationPeriodsV2"
        ]
      }
    },
    "/v2/allocationperiods/{allocationPeriodId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "AllocationPeriodsV2_Get",
        "parameters": [
          {
            "description": "Id of the requsted allocation period.",
            "format": "uuid",
            "in": "path",
            "name": "allocationPeriodId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllocationPeriodApi"
            }
          }
        },
        "summary": "Get single allocation period.",
        "tags": [
          "AllocationPeriodsV2"
        ]
      }
    },
    "/v2/approval/supplierinvoice/{id}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Make sure you have the correct approval settings in company settings and permissions on user level.<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "ApprovalV2_ApproveInvoice",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "approvalModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalApi"
            }
          },
          {
            "description": "The id of the invoice draft",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        },
        "summary": "Replace the approval status of a invoice draft.",
        "tags": [
          "ApprovalV2"
        ]
      }
    },
    "/v2/approval/vatreport/{id}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Make sure you have the correct approval settings in company settings and permissions on user level.<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "ApprovalV2_ApproveVatReport",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "approvalModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalApi"
            }
          },
          {
            "description": "The id of the vat report",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VatReportApi"
            }
          }
        },
        "summary": "Replace the approval status of a vat report.",
        "tags": [
          "ApprovalV2"
        ]
      }
    },
    "/v2/appstore/status": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AppStoreActivationStatusV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AppStoreActivationStatusApi]"
            }
          }
        },
        "tags": [
          "AppStoreActivationStatusV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AppStoreActivationStatusV2_Put",
        "parameters": [
          {
            "in": "body",
            "name": "statusDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppStoreActivationStatusApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppStoreActivationStatusApi"
            }
          }
        },
        "tags": [
          "AppStoreActivationStatusV2"
        ]
      }
    },
    "/v2/articleaccountcodings": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticleAccountCodingsV2_Get",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "vatRateDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[ArticleAccountCodingAPI]"
            }
          }
        },
        "summary": "Get a list of article account codings",
        "tags": [
          "ArticleAccountCodingsV2"
        ]
      }
    },
    "/v2/articleaccountcodings/{articleAccountCodingId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticleAccountCodingsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "articleAccountCodingId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "vatRateDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleAccountCodingAPI"
            }
          }
        },
        "summary": "Get a single article account coding. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.",
        "tags": [
          "ArticleAccountCodingsV2"
        ]
      }
    },
    "/v2/articlelabels": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabelsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[ArticleLabelApi]"
            }
          }
        },
        "summary": "Gets all article labels.",
        "tags": [
          "ArticleLabelsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabelsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "fromArticleLabel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        },
        "summary": "Create an article label.",
        "tags": [
          "ArticleLabelsV2"
        ]
      }
    },
    "/v2/articlelabels/{articleLabelId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabelsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "articleLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        },
        "summary": "Deletes an article label.",
        "tags": [
          "ArticleLabelsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabelsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "articleLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        },
        "summary": "Gets an article label by id.",
        "tags": [
          "ArticleLabelsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabelsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "articleLabelId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "fromArticleLabel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleLabelApi"
            }
          }
        },
        "summary": "Replace the content of an article label.",
        "tags": [
          "ArticleLabelsV2"
        ]
      }
    },
    "/v2/articles": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticlesV2_Get",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "showPricesWithTwoDecimals",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If customerId is provided in querystring, then article prices and discounts will be returned based on\r\nwhich pricelist and discount agreement is assigned to customer.",
            "format": "uuid",
            "in": "query",
            "name": "customerId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[ArticleApi]"
            }
          }
        },
        "summary": "Gets articles.",
        "tags": [
          "ArticlesV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticlesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "article",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArticleApi"
            }
          }
        },
        "summary": "Create a single article.",
        "tags": [
          "ArticlesV2"
        ]
      }
    },
    "/v2/articles/{articleId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticlesV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "articleId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "query",
            "name": "showPricesWithTwoDecimals",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "If customerId is provided in querystring, then article prices and discounts will be returned based on\r\nwhich pricelist and discount agreement is assigned to customer.",
            "format": "uuid",
            "in": "query",
            "name": "customerId",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleApi"
            }
          }
        },
        "summary": "Gets an article by id.",
        "tags": [
          "ArticlesV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticlesV2_Put",
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "articleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "article",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleApi"
            }
          }
        },
        "summary": "Replace the data in an article.",
        "tags": [
          "ArticlesV2"
        ]
      }
    },
    "/v2/attachmentlinks": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentLinksV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "attachmentLinks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentLinkApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachmentLinkApi"
            }
          }
        },
        "summary": "Create new links between an existing document and a set of attachments.",
        "tags": [
          "AttachmentLinksV2"
        ]
      }
    },
    "/v2/attachmentlinks/{attachmentId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentLinksV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete the link between an existing document and its attachment.",
        "tags": [
          "AttachmentLinksV2"
        ]
      }
    },
    "/v2/attachments": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "If you don't need to download the attachment we advise using the includeTemporaryUrl parameter set to false in order to increase performance.<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentsV2_Get",
        "parameters": [
          {
            "description": "Default value: true. When set to false the endpoint returns just the unmatched attachments.",
            "in": "query",
            "name": "includeMatched",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: true. When set to false the endpoint returns attachments but does not provide the TemporaryUrl.",
            "in": "query",
            "name": "includeTemporaryUrl",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AttachmentResultApi]"
            }
          }
        },
        "summary": "Get a list of attachments",
        "tags": [
          "AttachmentsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "postedAttachment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentUploadApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachmentResultApi"
            }
          }
        },
        "summary": "Create a attachment",
        "tags": [
          "AttachmentsV2"
        ]
      }
    },
    "/v2/attachments/{attachmentId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a attachment",
        "tags": [
          "AttachmentsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentResultApi"
            }
          }
        },
        "summary": "Get a attachment",
        "tags": [
          "AttachmentsV2"
        ]
      }
    },
    "/v2/bankaccounts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Visma Lön Smart</b></p>",
        "operationId": "BankAccountsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[BankAccountApi]"
            }
          }
        },
        "summary": "Get a list of bank accounts.",
        "tags": [
          "BankAccountsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Visma Lön Smart</b></p>",
        "operationId": "BankAccountsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "bankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankAccountApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BankAccountApi"
            }
          }
        },
        "summary": "Create a bank account.",
        "tags": [
          "BankAccountsV2"
        ]
      }
    },
    "/v2/bankaccounts/{bankAccountId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Visma Lön Smart</b></p>",
        "operationId": "BankAccountsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a bank account.",
        "tags": [
          "BankAccountsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Visma Lön Smart</b></p>",
        "operationId": "BankAccountsV2_Get",
        "parameters": [
          {
            "description": "Id of the requested bank account.",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankAccountApi"
            }
          }
        },
        "summary": "Get a specific bank account.",
        "tags": [
          "BankAccountsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Visma Lön Smart</b></p>",
        "operationId": "BankAccountsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "bankAccountChanges",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankAccountApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankAccountApi"
            }
          }
        },
        "summary": "Replace a bank account.",
        "tags": [
          "BankAccountsV2"
        ]
      }
    },
    "/v2/banks": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "BankV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[BankApi]"
            }
          }
        },
        "summary": "Get available banks in eAccounting.",
        "tags": [
          "BankV2"
        ]
      }
    },
    "/v2/banktransactions/{bankAccountId}/matched": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "BankTransactionsV2_Get",
        "parameters": [
          {
            "description": "The company bank account to which the requested transactions correspond",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Default: First day of the current month.",
            "format": "date-time",
            "in": "query",
            "name": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Default: Last day of the current month.",
            "format": "date-time",
            "in": "query",
            "name": "toDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[BankTransactionApi]"
            }
          }
        },
        "summary": "Get a list of matched bank transactions.",
        "tags": [
          "BankTransactionsV2"
        ]
      }
    },
    "/v2/banktransactions/{bankAccountId}/unmatched": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "BankTransactionsV2_GetUnmatched",
        "parameters": [
          {
            "description": "The company bank account to which the requested transactions correspond",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Default: First day of the current month.",
            "format": "date-time",
            "in": "query",
            "name": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "Default: Last day of the current month.",
            "format": "date-time",
            "in": "query",
            "name": "toDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[BankTransactionApi]"
            }
          }
        },
        "summary": "Get a list of unmatched bank transactions.",
        "tags": [
          "BankTransactionsV2"
        ]
      }
    },
    "/v2/banktransactions/{bankAccountId}/{bankTransactionId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "BankTransactionsV2_GetMatchedById",
        "parameters": [
          {
            "description": "The company bank account of the request transaction",
            "format": "uuid",
            "in": "path",
            "name": "bankAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The requested transaction id",
            "format": "uuid",
            "in": "path",
            "name": "bankTransactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BankTransactionApi"
            }
          }
        },
        "summary": "Get a specific bank transaction.",
        "tags": [
          "BankTransactionsV2"
        ]
      }
    },
    "/v2/companysettings": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "CompanySettingsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanySettingsApi"
            }
          }
        },
        "summary": "Get company settings.",
        "tags": [
          "CompanySettingsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "CompanySettingsV2_Put",
        "parameters": [
          {
            "in": "body",
            "name": "companySettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySettingsApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanySettingsApi"
            }
          }
        },
        "summary": "Replace company settings.",
        "tags": [
          "CompanySettingsV2"
        ]
      }
    },
    "/v2/companysettings/accountinglocksettings": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "CompanySettingsV2_UpdateAccountingLockSettings",
        "parameters": [
          {
            "in": "body",
            "name": "accountingLockSettingsApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountingLockSettingsApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanySettingsApi"
            }
          }
        },
        "summary": "Update accounting lock interval settings.",
        "tags": [
          "CompanySettingsV2"
        ]
      }
    },
    "/v2/companysettings/rotrut": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Only for swedish companies and if the company uses rot reduced invoicing. Use PUT v2/companysettings to change that.<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "CompanySettingsV2_UpdateRotRutSettings",
        "parameters": [
          {
            "in": "body",
            "name": "rotRutSettingsApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyRotRutSettingsApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompanySettingsApi"
            }
          }
        },
        "summary": "Update ROT/RUT settings.",
        "tags": [
          "CompanySettingsV2"
        ]
      }
    },
    "/v2/costcenteritems": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "CostCenterItemsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "costCenterItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterItemApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CostCenterItemApi"
            }
          }
        },
        "summary": "Create a single cost center item.",
        "tags": [
          "CostCenterItemsV2"
        ]
      }
    },
    "/v2/costcenteritems/{costCenterItemId}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "CostCenterItemsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "costCenterItemId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "costCenterItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterItemApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterItemApi"
            }
          }
        },
        "summary": "Replace the data in a cost center item.",
        "tags": [
          "CostCenterItemsV2"
        ]
      }
    },
    "/v2/costcenteritems/{itemId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "CostCenterItemsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "itemId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterItemApi"
            }
          }
        },
        "summary": "Get a specific cost center item.",
        "tags": [
          "CostCenterItemsV2"
        ]
      }
    },
    "/v2/costcenters": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "CostCentersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CostCenterApi]"
            }
          }
        },
        "summary": "Get a list of cost centers",
        "tags": [
          "CostCentersV2"
        ]
      }
    },
    "/v2/costcenters/{id}": {
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "CostCentersV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "costCenter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterApi"
            }
          }
        },
        "summary": "Replace content in a cost center.",
        "tags": [
          "CostCentersV2"
        ]
      }
    },
    "/v2/countries": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo, Bookkeeping</b></p>",
        "operationId": "CountriesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CountryApi]"
            }
          }
        },
        "summary": "Get a list of all countries.",
        "tags": [
          "CountriesV2"
        ]
      }
    },
    "/v2/countries/{countrycode}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo, Bookkeeping</b></p>",
        "operationId": "CountriesV2_Get",
        "parameters": [
          {
            "description": "Two letter code of requested country.",
            "in": "path",
            "name": "countrycode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CountryApi"
            }
          }
        },
        "summary": "Get a single country.",
        "tags": [
          "CountriesV2"
        ]
      }
    },
    "/v2/currencies": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping</b></p>",
        "operationId": "CurrenciesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CurrencyApi]"
            }
          }
        },
        "summary": "Get a list of currencies",
        "tags": [
          "CurrenciesV2"
        ]
      }
    },
    "/v2/customerinvoicedrafts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CustomerInvoiceDraftApi]"
            }
          }
        },
        "summary": "Get all customer invoice drafts.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "ReversedConstructionServicesVatFree attribute on a CustomerInvoiceDraftRow shall only be used for articels with reverse VAT charge.\r\nFor other VAT free articles ReversedConstructionServicesVatFree shall be set to 'false'.<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "customerInvoiceDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftApi"
            }
          }
        },
        "summary": "Create a single customer invoice draft.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      }
    },
    "/v2/customerinvoicedrafts/{customerInvoiceDraftId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a customer invoice draft.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "customerInvoiceDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftApi"
            }
          }
        },
        "summary": "Replace the data in a customer invoice draft.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      }
    },
    "/v2/customerinvoicedrafts/{customerInvoiceDraftId}/convert": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_ConvertToInvoice",
        "parameters": [
          {
            "description": "The customer Invoice Draft Id.",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional set of properties to validate. Ignore the properties you do not wish to validate.",
            "in": "body",
            "name": "invoiceValidations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftValidationApi"
            }
          },
          {
            "description": "Optional, false by default.\r\nIf this parameter is set to true, or if the same parameter from company settings is set to true, then the draft's invoice date is used (past or future), or if date misses, the draft's creation date is used\r\nIf this parameter is omitted, and the same parameter from company settings is not set or is set to false, then the draft's invoice date is used if it's in future, or if that date misses or is in past, today date is used",
            "in": "query",
            "name": "keepOriginalDraftDate",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optional, false by default.\r\nIf this parameter is set to true, use keepOriginalDraftDate parameter value to decide whether to use draft's invoice date or not regardless of company settings value.",
            "in": "query",
            "name": "overrideCompanyKeepOriginalDraftDate",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          }
        },
        "summary": "Converts a CustomerInvoiceDraft to a CustomerInvoice.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      }
    },
    "/v2/customerinvoicedrafts/{invoiceDraftId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDraftsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraftApi"
            }
          }
        },
        "summary": "Gets a customer invoice draft by id.",
        "tags": [
          "CustomerInvoiceDraftsV2"
        ]
      }
    },
    "/v2/customerinvoices": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_Get",
        "parameters": [
          {
            "description": "Used to get the invoices which have been modified since a prompted date",
            "format": "date-time",
            "in": "query",
            "name": "modifiedSinceUtc",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CustomerInvoiceApi]"
            }
          }
        },
        "summary": "Get all customer invoices.",
        "tags": [
          "CustomerInvoicesV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "invoiceApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          },
          {
            "description": "Used for the automatic distribution per person of the rot reduced invoicing amount.",
            "in": "query",
            "name": "rotReducedAutomaticDistribution",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          }
        },
        "summary": "Create a single customer invoice.",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          }
        },
        "summary": "Gets a customer invoice with a specific id.",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}/email": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Body parameters:\r\n\"Email\" : recipient email(string). Can be empty string and in this case default customer email address will be fetched from the DB.\r\nIf customer doesn't have a default email in DB you will get an exception saying that email was not sent.\r\n\"CcRecipients\" : a list of email addresses. Max 5 recipients.\r\n\"Subject\" : can be empty string and in this case a default subject will be generated: \"Invoice from {companyName}\".\r\n\"Message\" : can be empty string and in this case a default message will be generated: \"Dear Customer. Sending your invoice as agreed. Best regards, {company requisites}\".<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_SendEmail",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "emailApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Send an invoice by email",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}/paymentreminders": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_SendPaymentReminderEmail",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "emailApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentReminderEmailApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Sends a payment reminder email to an overdue invoice",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}/payments": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "customerInvoicePayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InvoicePaymentApi"
            }
          }
        },
        "summary": "Post a payment towards a bookkept customer invoice. Use factoring fee and account number in order to pay with factoring",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}/pdf": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "As invoices are generated at request time, if not generated before, this endpoint sometimes has higher than average response time.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_GetPdfReplacement",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceUrlApi"
            }
          }
        },
        "summary": "Gets a customer invoice in Portable Document Format (PDF).",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerinvoices/{invoiceId}/print": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesV2_Print",
        "parameters": [
          {
            "description": "The id of the customer invoice",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Gets a PDF-file of a customer invoice.",
        "tags": [
          "CustomerInvoicesV2"
        ]
      }
    },
    "/v2/customerlabels": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "CustomerLabelsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CustomerLabelApi]"
            }
          }
        },
        "summary": "Gets all customer labels.",
        "tags": [
          "CustomerLabelsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "CustomerLabelsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "fromCustomerLabel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        },
        "summary": "Create a customer label.",
        "tags": [
          "CustomerLabelsV2"
        ]
      }
    },
    "/v2/customerlabels/{customerLabelId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "CustomerLabelsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        },
        "summary": "Deletes a customer label.",
        "tags": [
          "CustomerLabelsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "CustomerLabelsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        },
        "summary": "Gets an customer label by id.",
        "tags": [
          "CustomerLabelsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "CustomerLabelsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerLabelId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "fromCustomerLabel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLabelApi"
            }
          }
        },
        "summary": "Replace content of a customer label.",
        "tags": [
          "CustomerLabelsV2"
        ]
      }
    },
    "/v2/customerledgeritems": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItemsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CustomerLedgerItemApi]"
            }
          }
        },
        "summary": "Get a list of customer ledger items.",
        "tags": [
          "CustomerLedgerItemsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItemsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "customerLedgerItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemApi"
            }
          }
        },
        "summary": "Create a customer ledger item.",
        "tags": [
          "CustomerLedgerItemsV2"
        ]
      }
    },
    "/v2/customerledgeritems/customerledgeritemswithvoucher": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItemsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "customerLedgerItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemWithVoucherApi"
            }
          },
          {
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "in": "query",
            "name": "useAutomaticVatCalculation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "in": "query",
            "name": "useDefaultVatCodes",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default voucher series (alphabetic character before number).",
            "in": "query",
            "name": "useDefaultVoucherSeries",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemWithVoucherApi"
            }
          }
        },
        "summary": "Create a customer ledger item and a voucher included.",
        "tags": [
          "CustomerLedgerItemsV2"
        ]
      }
    },
    "/v2/customerledgeritems/{customerLedgerItemId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItemsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerLedgerItemId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemApi"
            }
          }
        },
        "summary": "Get a customer ledger item by id.",
        "tags": [
          "CustomerLedgerItemsV2"
        ]
      }
    },
    "/v2/customers": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[CustomerApi]"
            }
          }
        },
        "summary": "Get all customers.",
        "tags": [
          "CustomersV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerApi"
            }
          }
        },
        "summary": "Creates a customer.",
        "tags": [
          "CustomersV2"
        ]
      }
    },
    "/v2/customers/{customerId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a customer.",
        "tags": [
          "CustomersV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_Get",
        "parameters": [
          {
            "description": "Id of the requested customer.",
            "format": "uuid",
            "in": "path",
            "name": "customerId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get a specific customer.",
        "tags": [
          "CustomersV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "updatedCustomer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerApi"
            }
          }
        },
        "summary": "Replace the data in a customer.",
        "tags": [
          "CustomersV2"
        ]
      }
    },
    "/v2/customers/{customerId}/autoinvoicerecipients": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomersV2_GetAutoInvoiceRecipients",
        "parameters": [
          {
            "description": "Id of the customer.",
            "format": "uuid",
            "in": "path",
            "name": "customerId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[AutoInvoiceAddressApi]"
            }
          }
        },
        "summary": "Check this list if the provided customer can receive e-invoices. An empty list is retrieved if the customer \r\nis a private person or is not found in the network.",
        "tags": [
          "CustomersV2"
        ]
      }
    },
    "/v2/deliverymethods": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryMethodsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[DeliveryMethodApi]"
            }
          }
        },
        "summary": "Get delivery methods.",
        "tags": [
          "DeliveryMethodsV2"
        ]
      }
    },
    "/v2/deliverymethods/{deliveryMethodId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryMethodsV2_Get",
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "deliveryMethodId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryMethodApi"
            }
          }
        },
        "summary": "Get a delivery method.",
        "tags": [
          "DeliveryMethodsV2"
        ]
      }
    },
    "/v2/deliveryterms": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryTermsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[DeliveryTermApi]"
            }
          }
        },
        "summary": "Get a list of delivery terms",
        "tags": [
          "DeliveryTermsV2"
        ]
      }
    },
    "/v2/deliveryterms/{deliveryTermId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryTermsV2_Get",
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "deliveryTermId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryTermApi"
            }
          }
        },
        "summary": "Get single delivery term",
        "tags": [
          "DeliveryTermsV2"
        ]
      }
    },
    "/v2/documents/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "DocumentsV2_Get",
        "parameters": [
          {
            "description": "Document id",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentApi"
            }
          }
        },
        "summary": "Get a vat report pdf by document id.",
        "tags": [
          "DocumentsV2"
        ]
      }
    },
    "/v2/fiscalyears": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[FiscalYearApi]"
            }
          }
        },
        "summary": "Get a list of fiscal years.",
        "tags": [
          "FiscalYearsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "fiscalYear",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiscalYearApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FiscalYearApi"
            }
          }
        },
        "summary": "Create a fiscal year.",
        "tags": [
          "FiscalYearsV2"
        ]
      }
    },
    "/v2/fiscalyears/openingbalances": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[OpeningBalancesApi]"
            }
          }
        },
        "summary": "Gets the opening balances of the first fiscal year. If you want balances of following years, use the GET /accountbalances instead.",
        "tags": [
          "FiscalYearsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_UpdateAccountOpeningBalance",
        "parameters": [
          {
            "description": "The account balances to update",
            "in": "body",
            "name": "accountBalancesToUpdateApi",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountOpeningBalanceApi"
              },
              "type": "array"
            }
          },
          {
            "description": "If true, the selected inactive accounts will be enabled, therefore allowing editing of the balance. Default: true",
            "in": "query",
            "name": "enableInactiveAccounts",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/OpeningBalancesApi"
              },
              "type": "array"
            }
          }
        },
        "summary": "Updates the opening balance of the first fiscal year",
        "tags": [
          "FiscalYearsV2"
        ]
      }
    },
    "/v2/fiscalyears/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_Get",
        "parameters": [
          {
            "description": "Id of requested fiscal year.",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FiscalYearApi"
            }
          }
        },
        "summary": "Get a single fiscal year.",
        "tags": [
          "FiscalYearsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "FiscalYearsV2_Put",
        "parameters": [
          {
            "description": "Id of the fiscal year to update.",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "fiscalYear",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FiscalYearUpdateApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FiscalYearApi"
            }
          }
        },
        "summary": "Updates a fiscal year.",
        "tags": [
          "FiscalYearsV2"
        ]
      }
    },
    "/v2/foreignpaymentcodes": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping</b></p>",
        "operationId": "ForeignPaymentCodesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[ForeignPaymentCodesAPI]"
            }
          }
        },
        "summary": "Gets a list of foreign payment codes.",
        "tags": [
          "ForeignPaymentCodesV2"
        ]
      }
    },
    "/v2/messagethreads": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_Get",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "excludeClosed",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageThreadApi"
            }
          }
        },
        "summary": "Gets all messages threads.",
        "tags": [
          "MessageThreadsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "messageToPostApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageToPostApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MessageThreadApi"
            }
          }
        },
        "summary": "Create a new message thread.",
        "tags": [
          "MessageThreadsV2"
        ]
      }
    },
    "/v2/messagethreads/messages": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_GetMessages",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageApi"
            }
          }
        },
        "summary": "Gets all the messages of the threads.",
        "tags": [
          "MessageThreadsV2"
        ]
      }
    },
    "/v2/messagethreads/{messageThreadId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "messageThreadId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageThreadApi"
            }
          }
        },
        "summary": "Retrives a message thread.",
        "tags": [
          "MessageThreadsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_ReplyToMessage",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "messageReplyApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "messageThreadId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MessageApi"
            }
          }
        },
        "summary": "Replies to a message thread.",
        "tags": [
          "MessageThreadsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_MarkThread",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "options",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageStatusApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "messageThreadId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageThreadApi"
            }
          }
        },
        "summary": "Marks a specific message thread.",
        "tags": [
          "MessageThreadsV2"
        ]
      }
    },
    "/v2/messagethreads/{messageThreadId}/messages": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "MessageThreadsV2_GetMessages",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "messageThreadId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageApi"
            }
          }
        },
        "summary": "Retrives the messages of a message thread.",
        "tags": [
          "MessageThreadsV2"
        ]
      }
    },
    "/v2/notes": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "NotesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          }
        },
        "summary": "Get all notes.",
        "tags": [
          "NotesV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "NotesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "note",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          }
        },
        "summary": "Create a new note.",
        "tags": [
          "NotesV2"
        ]
      }
    },
    "/v2/notes/{noteId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "NotesV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "noteId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          }
        },
        "summary": "Get a specific note.",
        "tags": [
          "NotesV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "NotesV2_Put",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "note",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "noteId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NoteApi"
            }
          }
        },
        "summary": "Updates a note.",
        "tags": [
          "NotesV2"
        ]
      }
    },
    "/v2/orders": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[OrderApi]"
            }
          }
        },
        "summary": "Get orders.",
        "tags": [
          "OrdersV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Post",
        "parameters": [
          {
            "in": "body",
            "name": "order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        },
        "summary": "Create order.",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/orders/{id}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete an order.",
        "tags": [
          "OrdersV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        },
        "summary": "Get order",
        "tags": [
          "OrdersV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "order",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Replace content in an order.",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/orders/{id}/backorder": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_BackOrder",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        },
        "summary": "",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/orders/{id}/convert": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Convert",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          }
        },
        "summary": "Converts an order to an invoice",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/orders/{id}/deliverynote/print": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_DeliveryNotePrint",
        "parameters": [
          {
            "description": "The id of the order",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get a pdf-file of a delivery note for an order.",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/orders/{id}/print": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>sales_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrdersV2_Print",
        "parameters": [
          {
            "description": "The id of the order",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get a pdf-file of an order.",
        "tags": [
          "OrdersV2"
        ]
      }
    },
    "/v2/partnerresourcelinks": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinksV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[PartnerResourceLinkApi]"
            }
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Get a list of partner resource links.",
        "tags": [
          "PartnerResourceLinksV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinksV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "partnerResourceLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerResourceLinkApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "Partner resource link created.",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLinkApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Create a partner resource link",
        "tags": [
          "PartnerResourceLinksV2"
        ]
      }
    },
    "/v2/partnerresourcelinks/{partnerResourceLinkId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinksV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "partnerResourceLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Partner resource link deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          }
        },
        "summary": "Delete a partner resource link",
        "tags": [
          "PartnerResourceLinksV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinksV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "partnerResourceLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLinkApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a partner resource link by id.",
        "tags": [
          "PartnerResourceLinksV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinksV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "partnerResourceLinkId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "partnerResourceLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerResourceLinkApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Partner resource link updated.",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLinkApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Update a partner resource link",
        "tags": [
          "PartnerResourceLinksV2"
        ]
      }
    },
    "/v2/paymentvoucher": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "Action available for norwegian and dutch companies only.<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "PaymentVoucherV2_PostPayment",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "paymentVoucherApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentVoucherApi"
            }
          },
          {
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "in": "query",
            "name": "useAutomaticVatCalculation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "in": "query",
            "name": "useDefaultVatCodes",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default voucher series (alphabetic character before number).",
            "in": "query",
            "name": "useDefaultVoucherSeries",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: False. Set to false and override existing bank transaction validation.",
            "in": "query",
            "name": "checkExistingBankTransaction",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherApi"
            }
          }
        },
        "summary": "Creates a payment voucher.",
        "tags": [
          "PaymentVoucherV2"
        ]
      }
    },
    "/v2/projects": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "ProjectsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[ProjectApi]"
            }
          }
        },
        "summary": "Get a list of projects.",
        "tags": [
          "ProjectsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "ProjectsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectApi"
            }
          }
        },
        "summary": "Create a new project.",
        "tags": [
          "ProjectsV2"
        ]
      }
    },
    "/v2/projects/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "ProjectsV2_Get",
        "parameters": [
          {
            "description": "Project Id",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectApi"
            }
          }
        },
        "summary": "Get a specific project.",
        "tags": [
          "ProjectsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Visma Lön Smart</b></p>",
        "operationId": "ProjectsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectApi"
            }
          }
        },
        "summary": "Replace content in a project.",
        "tags": [
          "ProjectsV2"
        ]
      }
    },
    "/v2/quotedrafts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[QuoteApi]"
            }
          }
        },
        "summary": "Get all quote drafts.",
        "tags": [
          "QuoteDraftsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_Post",
        "parameters": [
          {
            "in": "body",
            "name": "quoteDraftApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        },
        "summary": "Create quote draft.",
        "tags": [
          "QuoteDraftsV2"
        ]
      }
    },
    "/v2/quotedrafts/{id}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete an quote.",
        "tags": [
          "QuoteDraftsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        },
        "summary": "Get a quote draft",
        "tags": [
          "QuoteDraftsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "quoteApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Replace content in an quote.",
        "tags": [
          "QuoteDraftsV2"
        ]
      }
    },
    "/v2/quotedrafts/{id}/convert": {
      "put": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuoteDraftsV2_ConvertToQuote",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        },
        "summary": "Converts a quote draft to a quote",
        "tags": [
          "QuoteDraftsV2"
        ]
      }
    },
    "/v2/quotes": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[QuoteApi]"
            }
          }
        },
        "summary": "Get sent and converted quotes.",
        "tags": [
          "QuotesV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Post",
        "parameters": [
          {
            "in": "body",
            "name": "quoteApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        },
        "summary": "Create a quote.",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/quotes/{id}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete an quote.",
        "tags": [
          "QuotesV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        },
        "summary": "Get a sent and converted quote",
        "tags": [
          "QuotesV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "quoteApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuoteApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Replace the contents of an ongoing quote.",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/quotes/{id}/accept": {
      "put": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Accepts an ongoing quote",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/quotes/{id}/converttocustomerinvoice": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_ConvertToInvoice",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceApi"
            }
          }
        },
        "summary": "Converts an existing quote to a customer invoice",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/quotes/{id}/converttoorder": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_ConvertToOrder",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "conversionType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuoteConversionApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderApi"
            }
          }
        },
        "summary": "Converts an existing quote to a order type",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/quotes/{id}/print": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>quote_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "QuotesV2_Print",
        "parameters": [
          {
            "description": "The id of the quote",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Get a pdf-file of a quote.",
        "tags": [
          "QuotesV2"
        ]
      }
    },
    "/v2/salesdocumentattachments": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": true,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "attachment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentApi"
            }
          }
        },
        "summary": "Create a sales document attachment.",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/customerinvoice": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_PostCustomerInvoice",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "attachment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentApi"
            }
          }
        },
        "summary": "Create a sales document attached to a customer invoice (including customer ledger items).",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/customerinvoice/{customerInvoiceId}/{attachmentId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_DeleteCustomerInvoice",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a document attached to a customer invoice (including customer ledger items).",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/customerinvoicedraft": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_PostCustomerInvoiceDraft",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "attachment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SalesDocumentAttachmentApi"
            }
          }
        },
        "summary": "Create a sales document attached to a customer invoice draft.",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/customerinvoicedraft/{customerInvoiceDraftId}/{attachmentId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_DeleteCustomerInvoiceDraft",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a document attached to a customer invoice draft.",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/{attachmentId}.pdf": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Download a specific sales document attachment using the attachmentId.",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/salesdocumentattachments/{customerInvoiceDraftId}/{attachmentId}": {
      "delete": {
        "consumes": [],
        "deprecated": true,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "SalesDocumentAttachmentsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "customerInvoiceDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "attachmentId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a customer invoice draft attachment.",
        "tags": [
          "SalesDocumentAttachmentsV2"
        ]
      }
    },
    "/v2/supplierinvoicedrafts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[SupplierInvoiceDraftApi]"
            }
          }
        },
        "summary": "Get a paginated list of all supplier invoice drafts.",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "supplierInvoiceDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraftApi"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "useDefaultVatCodes",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Automatic calculation of VAT based on vat code. DK, NL and SE only. If this is set to true, then vat rows will be added based on the vat code of the accounts which can be default or custom based on the \"useDefaultVatCodes\" parameter.",
            "in": "query",
            "name": "calculateVatOnCostAccounts",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Validate for batch process and fiscal year.",
            "in": "query",
            "name": "batchProcessExtendedValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Check if the invoice is duplicate.",
            "in": "query",
            "name": "duplicateCheckExtendedValidation",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraftApi"
            }
          }
        },
        "summary": "Create a supplier invoice draft.",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      }
    },
    "/v2/supplierinvoicedrafts/{supplierInvoiceDraftId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierInvoiceDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Deletes a supplier invoice draft",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierInvoiceDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraftApi"
            }
          }
        },
        "summary": "Get a single supplier invoice draft.",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "To update attachments us the attachment endpoint.<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierInvoiceDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "supplierInvoiceDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraftApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraftApi"
            }
          }
        },
        "summary": "Replace content in a supplier invoice draft.",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      }
    },
    "/v2/supplierinvoicedrafts/{supplierInvoiceDraftId}/convert": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SupplierInvoiceDraftsV2_Convert",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierInvoiceDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceApi"
            }
          }
        },
        "summary": "Converts a supplier invoice draft to a supplier invoice",
        "tags": [
          "SupplierInvoiceDraftsV2"
        ]
      }
    },
    "/v2/supplierinvoices": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "SupplierInvoicesV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[SupplierInvoiceApi]"
            }
          }
        },
        "summary": "Get a list of supplier invoices",
        "tags": [
          "SupplierInvoicesV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "SupplierInvoicesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "supplierInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceApi"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "useDefaultVatCodes",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Automatic calculation of VAT based on vat code. DK and NL only",
            "in": "query",
            "name": "calculateVatOnCostAccounts",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Check if the invoice is duplicate.",
            "in": "query",
            "name": "duplicateCheckExtendedValidation",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceApi"
            }
          }
        },
        "summary": "Create a supplier invoice.",
        "tags": [
          "SupplierInvoicesV2"
        ]
      }
    },
    "/v2/supplierinvoices/{invoiceId}/payments": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "SupplierInvoicesV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "supplierInvoicePayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "invoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InvoicePaymentApi"
            }
          }
        },
        "summary": "Post a payment towards a bookkept supplier invoice",
        "tags": [
          "SupplierInvoicesV2"
        ]
      }
    },
    "/v2/supplierinvoices/{supplierInvoiceId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "SupplierInvoicesV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierInvoiceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceApi"
            }
          }
        },
        "summary": "Get a supplier",
        "tags": [
          "SupplierInvoicesV2"
        ]
      }
    },
    "/v2/suppliers": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SuppliersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[SupplierApi]"
            }
          }
        },
        "summary": "Get a list of suppliers.",
        "tags": [
          "SuppliersV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SuppliersV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "supplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierApi"
            }
          }
        },
        "summary": "Post a supplier",
        "tags": [
          "SuppliersV2"
        ]
      }
    },
    "/v2/suppliers/{supplierId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SuppliersV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Deletes a supplier",
        "tags": [
          "SuppliersV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SuppliersV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierApi"
            }
          }
        },
        "summary": "Get a specific supplier.",
        "tags": [
          "SuppliersV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "SuppliersV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "supplierId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "apiSupplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierApi"
            }
          }
        },
        "summary": "Replace a supplier",
        "tags": [
          "SuppliersV2"
        ]
      }
    },
    "/v2/termsofpayments": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo, Bookkeeping</b></p>",
        "operationId": "TermsOfPaymentV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[TermsOfPaymentApi]"
            }
          }
        },
        "summary": "Get a list of terms of payment items",
        "tags": [
          "TermsOfPaymentV2"
        ]
      }
    },
    "/v2/termsofpayments/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo, Bookkeeping</b></p>",
        "operationId": "TermsOfPaymentV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TermsOfPaymentApi"
            }
          }
        },
        "summary": "Get a terms of payment item by id",
        "tags": [
          "TermsOfPaymentV2"
        ]
      }
    },
    "/v2/units": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "UnitsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[UnitApi]"
            }
          }
        },
        "summary": "Get a list of Units",
        "tags": [
          "UnitsV2"
        ]
      }
    },
    "/v2/units/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "UnitsV2_Get",
        "parameters": [
          {
            "description": "Id of requested unit.",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UnitApi"
            }
          }
        },
        "summary": "Get a single unit.",
        "tags": [
          "UnitsV2"
        ]
      }
    },
    "/v2/users": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Invoicing, Standard, Bookkeeping, Solo, Visma Lön Smart</b></p>",
        "operationId": "UsersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[UserApi]"
            }
          }
        },
        "summary": "Get a list of users",
        "tags": [
          "UsersV2"
        ]
      }
    },
    "/v2/vatcodes": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VatCodeV2_Get",
        "parameters": [
          {
            "description": "Default value: Today",
            "in": "query",
            "name": "vatRateDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VatCodeApi]"
            }
          }
        },
        "summary": "Gets a list of all vat codes. \r\nIf Oss rules are set in company settings Oss vat codes are included",
        "tags": [
          "VatCodeV2"
        ]
      }
    },
    "/v2/vatcodes/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VatCodeV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Default value: Today",
            "in": "query",
            "name": "vatRateDate",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VatCodeApi]"
            }
          }
        },
        "summary": "Get a vat code item by it's id.",
        "tags": [
          "VatCodeV2"
        ]
      }
    },
    "/v2/vatreports": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "VatReportV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VatReportApi]"
            }
          }
        },
        "summary": "Get a list of vat reports",
        "tags": [
          "VatReportV2"
        ]
      }
    },
    "/v2/vatreports/{id}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "VatReportV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VatReportApi"
            }
          }
        },
        "summary": "Get a vat report item by id.",
        "tags": [
          "VatReportV2"
        ]
      }
    },
    "/v2/voucherdrafts": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VoucherDraftApi]"
            }
          }
        },
        "summary": "Get all vouchers drafts.",
        "tags": [
          "VoucherDraftsV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "voucherDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoucherDraftApi"
            }
          },
          {
            "description": "Default value: false. If true, the amounts are used as including VAT when draft is created.",
            "in": "query",
            "name": "amountIncludesVat",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherDraftApi"
            }
          }
        },
        "summary": "Create a single voucher draft.",
        "tags": [
          "VoucherDraftsV2"
        ]
      }
    },
    "/v2/voucherdrafts/{voucherDraftId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "voucherDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "summary": "Delete a voucher draft.",
        "tags": [
          "VoucherDraftsV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "voucherDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VoucherDraftApi"
            }
          }
        },
        "summary": "Gets a voucher draft by id.",
        "tags": [
          "VoucherDraftsV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Put",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "voucherDraftId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "voucherDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoucherDraftApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VoucherDraftApi"
            }
          }
        },
        "summary": "Replace the data in a voucher draft.",
        "tags": [
          "VoucherDraftsV2"
        ]
      }
    },
    "/v2/voucherdrafts/{voucherDraftId}/convert": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo, Bookkeeping</b></p>",
        "operationId": "VoucherDraftsV2_Convert",
        "parameters": [
          {
            "description": "The Voucher Draft Id.",
            "format": "uuid",
            "in": "path",
            "name": "voucherDraftId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherApi"
            }
          }
        },
        "summary": "Converts a VoucherDraft to a Voucher.",
        "tags": [
          "VoucherDraftsV2"
        ]
      }
    },
    "/v2/vouchers": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VouchersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VoucherApi]"
            }
          }
        },
        "summary": "Get all vouchers from all fiscal years.",
        "tags": [
          "VouchersV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "VouchersV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "apiVoucher",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoucherApi"
            }
          },
          {
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "in": "query",
            "name": "useAutomaticVatCalculation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "in": "query",
            "name": "useDefaultVatCodes",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Default value: True. Set to false and override default voucher series (alphabetic character before number).",
            "in": "query",
            "name": "useDefaultVoucherSeries",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherApi"
            }
          }
        },
        "summary": "Create a voucher.",
        "tags": [
          "VouchersV2"
        ]
      }
    },
    "/v2/vouchers/{fiscalyearId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VouchersV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "fiscalyearId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[VoucherApi]"
            }
          }
        },
        "summary": "Get all vouchers in a given fiscal year.",
        "tags": [
          "VouchersV2"
        ]
      }
    },
    "/v2/vouchers/{fiscalyearId}/{voucherId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VouchersV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "fiscalyearId",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "voucherId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VoucherApi"
            }
          }
        },
        "summary": "Get a single voucher from a given fiscal year",
        "tags": [
          "VouchersV2"
        ]
      }
    },
    "/v2/voucherwithoverunderpayment": {
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "VoucherWithOverunderPaymentV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "overunderPaymentVoucherApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VoucherWithOverunderPaymentApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        },
        "summary": "Create an over or underpayment voucher",
        "tags": [
          "VoucherWithOverunderPaymentV2"
        ]
      }
    },
    "/v2/voucherwithoverunderpayment/{voucherId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "VoucherWithOverunderPaymentV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "voucherId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[LedgerVoucherRelationApi]"
            }
          }
        },
        "summary": "Get all customer or supplier references for a specific voucher Id",
        "tags": [
          "VoucherWithOverunderPaymentV2"
        ]
      }
    },
    "/v2/webhooks": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase, ea:sales, ea:accounting, ea:purchase, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "WebHooksV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[WebHookApi]"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a list of webhooks.",
        "tags": [
          "WebHooksV2"
        ]
      },
      "post": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase, ea:sales, ea:accounting, ea:purchase, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "WebHooksV2_Post",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "webHook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHookApi"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "Webhook created.",
            "schema": {
              "$ref": "#/definitions/WebHookApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Creates a webhook.",
        "tags": [
          "WebHooksV2"
        ]
      }
    },
    "/v2/webhooks/{webHookId}": {
      "delete": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase, ea:sales, ea:accounting, ea:purchase, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "WebHooksV2_Delete",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "webHookId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Partner resource link deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Deletes a webhook",
        "tags": [
          "WebHooksV2"
        ]
      },
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase, ea:sales, ea:accounting, ea:purchase, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "WebHooksV2_Get",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "webHookId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebHookApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Get a webhook by id.",
        "tags": [
          "WebHooksV2"
        ]
      },
      "put": {
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase, ea:sales, ea:accounting, ea:purchase, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "WebHooksV2_Put",
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "webHookApi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHookApi"
            }
          },
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "webHookId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "Webhook updated.",
            "schema": {
              "$ref": "#/definitions/WebHookApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "summary": "Updates a webhook.",
        "tags": [
          "WebHooksV2"
        ]
      }
    },
    "/v2/webshoporders": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "WebshopOrdersV2_Get",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedResponse[WebshopOrderApi]"
            }
          }
        },
        "summary": "Get webshop orders from Visma Webshop.",
        "tags": [
          "WebshopOrdersV2"
        ]
      }
    },
    "/v2/webshoporders/{webshopOrderId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "WebshopOrdersV2_Get",
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "webshopOrderId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebshopOrderApi"
            }
          }
        },
        "summary": "Get a single webshop order.\r\n<param name=\"options\"></param><param name=\"webshopOrderId\"></param>",
        "tags": [
          "WebshopOrdersV2"
        ]
      }
    },
    "/v2/webshoporders/{webshopOrderId}/convert": {
      "post": {
        "consumes": [],
        "deprecated": false,
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "WebshopOrdersV2_ConvertToInvoice",
        "parameters": [
          {
            "description": "",
            "format": "uuid",
            "in": "path",
            "name": "webshopOrderId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        },
        "summary": "Converts a webshop order to a invoice. The resulted invoice will appear as paid in the sales invoice list.",
        "tags": [
          "WebshopOrdersV2"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}